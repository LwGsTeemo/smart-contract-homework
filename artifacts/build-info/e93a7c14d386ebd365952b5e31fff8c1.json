{
	"id": "e93a7c14d386ebd365952b5e31fff8c1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"B0843020.sol": {
				"content": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract B0843020 {\r\n     \r\n    //投票可選的提案數據結構\r\n    struct Proposal {\r\n        bytes32 name;\r\n        uint voteCount;\r\n    }\r\n     \r\n    //投票者的數據結構\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint votedProposal;\r\n    }\r\n     \r\n    Proposal[] proposals; //提案列表\r\n    address chairperson; //發起投票的人(這個投票合約的擁有者)\r\n    mapping(address => Voter) voters; //投票者地址與投票狀態的變數\r\n     \r\n    //合約建構子\r\n    constructor(bytes32[] memory proposalNames) public {\r\n        chairperson = msg.sender; //發起投票的人=呼叫建構子(創立這個合約)的人\r\n        voters[chairperson].weight = 1; //發起投票的人的投票權重(可以投1票)\r\n         \r\n        //把傳進的所有提案push進提案列表\r\n        for(uint i = 0; i < proposalNames.length; i++) {\r\n            proposals.push(Proposal({\r\n                name: proposalNames[i],\r\n                voteCount: 0\r\n            }));\r\n        }\r\n    }\r\n     \r\n    //發起投票的人指定誰有權利投票的function\r\n    //預防有人惡意使用多個帳號影響投票公正性\r\n    function giveRightToVote(address voter) public {\r\n        require(msg.sender == chairperson);//確認調用這個function的人是發起投票的人\r\n        require(voters[voter].voted == false);//確認要被授權投票權利的人是還沒有投票的人\r\n        require(voters[voter].weight == 0);//確認要被授權投票權利的人是沒有投票權利的人(投票權重0)\r\n         \r\n        voters[voter].weight = 1;//將要被授權投票權利的人的投票權重設為1\r\n    }\r\n     \r\n    //投票\r\n    function vote(uint proposal) public {\r\n        Voter storage sender = voters[msg.sender];//用storage修飾這個變數讓這個投票者的資訊會被記錄在區塊鏈上\r\n         \r\n        require(sender.voted ==false);//確認投票者是還沒有投過票的人\r\n        require(sender.weight > 0);//確認投票者是有權利投票的人(投票權重>0)\r\n         \r\n        sender.voted = true;//將投票者設為已投票\r\n        sender.votedProposal = proposal;//將投票者投的提案記錄在會被備份在區塊鏈的變數上\r\n         \r\n        proposals[proposal].voteCount += sender.weight;//將提該案的人數加上投票者投的權重\r\n    }\r\n     \r\n    //開票\r\n    function showWinningProposal() public view returns (uint winningProposal) {\r\n        uint maxVote = 0; //將目前最多的得票數設為0\r\n         \r\n        //迴圈找出所有提案得票數最多的\r\n        for(uint i = 0; i < proposals.length; i++) {\r\n            if(proposals[i].voteCount > maxVote) {\r\n                maxVote = proposals[i].voteCount;\r\n                winningProposal = i;\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"B0843020.sol": {
				"B0843020": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "proposalNames",
									"type": "bytes32[]"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showWinningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"B0843020.sol\":36:2867  contract B0843020 {\r... */\n  mstore(0x40, 0x80)\n    /* \"B0843020.sol\":564:1076  constructor(bytes32[] memory proposalNames) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"B0843020.sol\":564:1076  constructor(bytes32[] memory proposalNames) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"B0843020.sol\":564:1076  constructor(bytes32[] memory proposalNames) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n    /* \"--CODEGEN--\":19:30   */\n  0x0100000000\n    /* \"--CODEGEN--\":14:17   */\n  dup3\n    /* \"--CODEGEN--\":11:31   */\n  gt\n    /* \"--CODEGEN--\":8:10   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":44:45   */\n  0x00\n    /* \"--CODEGEN--\":41:42   */\n  dup1\n    /* \"--CODEGEN--\":34:46   */\n  revert\n    /* \"--CODEGEN--\":8:10   */\ntag_3:\n    /* \"--CODEGEN--\":71:82   */\n  dup4\n    /* \"--CODEGEN--\":66:69   */\n  dup3\n    /* \"--CODEGEN--\":62:83   */\n  add\n    /* \"--CODEGEN--\":55:83   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":123:127   */\n  0x20\n    /* \"--CODEGEN--\":118:121   */\n  dup3\n    /* \"--CODEGEN--\":114:128   */\n  add\n    /* \"--CODEGEN--\":159:168   */\n  dup6\n    /* \"--CODEGEN--\":141:157   */\n  dup2\n    /* \"--CODEGEN--\":138:169   */\n  gt\n    /* \"--CODEGEN--\":135:137   */\n  iszero\n  tag_4\n  jumpi\n    /* \"--CODEGEN--\":182:183   */\n  0x00\n    /* \"--CODEGEN--\":179:180   */\n  dup1\n    /* \"--CODEGEN--\":172:184   */\n  revert\n    /* \"--CODEGEN--\":135:137   */\ntag_4:\n    /* \"--CODEGEN--\":219:222   */\n  dup3\n    /* \"--CODEGEN--\":213:223   */\n  mload\n    /* \"--CODEGEN--\":331:340   */\n  dup7\n    /* \"--CODEGEN--\":325:327   */\n  0x20\n    /* \"--CODEGEN--\":311:323   */\n  dup3\n    /* \"--CODEGEN--\":307:328   */\n  mul\n    /* \"--CODEGEN--\":289:305   */\n  dup4\n    /* \"--CODEGEN--\":285:329   */\n  add\n    /* \"--CODEGEN--\":282:341   */\n  gt\n    /* \"--CODEGEN--\":261:272   */\n  0x0100000000\n    /* \"--CODEGEN--\":247:259   */\n  dup3\n    /* \"--CODEGEN--\":244:273   */\n  gt\n    /* \"--CODEGEN--\":233:349   */\n  or\n    /* \"--CODEGEN--\":230:232   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":362:363   */\n  0x00\n    /* \"--CODEGEN--\":359:360   */\n  dup1\n    /* \"--CODEGEN--\":352:364   */\n  revert\n    /* \"--CODEGEN--\":230:232   */\ntag_5:\n    /* \"--CODEGEN--\":385:397   */\n  dup1\n    /* \"--CODEGEN--\":380:383   */\n  dup4\n    /* \"--CODEGEN--\":373:398   */\n  mstore\n    /* \"--CODEGEN--\":421:425   */\n  0x20\n    /* \"--CODEGEN--\":416:419   */\n  dup4\n    /* \"--CODEGEN--\":412:426   */\n  add\n    /* \"--CODEGEN--\":405:426   */\n  swap3\n  pop\n    /* \"--CODEGEN--\":0:433   */\n  pop\n  pop\n    /* \"B0843020.sol\":564:1076  constructor(bytes32[] memory proposalNames) public {\r... */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  0x20\n  mul\n  dup1\n  dup4\n  dup4\n    /* \"--CODEGEN--\":23:24   */\n  0x00\n    /* \"--CODEGEN--\":8:108   */\ntag_6:\n    /* \"--CODEGEN--\":33:36   */\n  dup4\n    /* \"--CODEGEN--\":30:31   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  lt\n    /* \"--CODEGEN--\":8:108   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":99:100   */\n  dup1\n    /* \"--CODEGEN--\":94:97   */\n  dup3\n    /* \"--CODEGEN--\":90:101   */\n  add\n    /* \"--CODEGEN--\":84:102   */\n  mload\n    /* \"--CODEGEN--\":80:81   */\n  dup2\n    /* \"--CODEGEN--\":75:78   */\n  dup5\n    /* \"--CODEGEN--\":71:82   */\n  add\n    /* \"--CODEGEN--\":64:103   */\n  mstore\n    /* \"--CODEGEN--\":52:54   */\n  0x20\n    /* \"--CODEGEN--\":49:50   */\n  dup2\n    /* \"--CODEGEN--\":45:55   */\n  add\n    /* \"--CODEGEN--\":40:55   */\n  swap1\n  pop\n    /* \"--CODEGEN--\":8:108   */\n  jump(tag_6)\ntag_8:\n    /* \"--CODEGEN--\":12:26   */\n  pop\n    /* \"B0843020.sol\":564:1076  constructor(bytes32[] memory proposalNames) public {\r... */\n  pop\n  pop\n  pop\n  swap1\n  pop\n  add\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":640:650  msg.sender */\n  caller\n    /* \"B0843020.sol\":626:637  chairperson */\n  0x01\n  0x00\n    /* \"B0843020.sol\":626:650  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":753:754  1 */\n  0x01\n    /* \"B0843020.sol\":724:730  voters */\n  0x02\n    /* \"B0843020.sol\":724:743  voters[chairperson] */\n  0x00\n    /* \"B0843020.sol\":731:742  chairperson */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B0843020.sol\":724:743  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"B0843020.sol\":724:750  voters[chairperson].weight */\n  0x00\n  add\n    /* \"B0843020.sol\":724:754  voters[chairperson].weight = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":886:892  uint i */\n  0x00\n    /* \"B0843020.sol\":895:896  0 */\n  dup1\n    /* \"B0843020.sol\":886:896  uint i = 0 */\n  swap1\n  pop\n    /* \"B0843020.sol\":882:1069  for(uint i = 0; i < proposalNames.length; i++) {\r... */\ntag_11:\n    /* \"B0843020.sol\":902:915  proposalNames */\n  dup2\n    /* \"B0843020.sol\":902:922  proposalNames.length */\n  mload\n    /* \"B0843020.sol\":898:899  i */\n  dup2\n    /* \"B0843020.sol\":898:922  i < proposalNames.length */\n  lt\n    /* \"B0843020.sol\":882:1069  for(uint i = 0; i < proposalNames.length; i++) {\r... */\n  iszero\n  tag_12\n  jumpi\n    /* \"B0843020.sol\":944:953  proposals */\n  0x00\n    /* \"B0843020.sol\":959:1056  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"B0843020.sol\":993:1006  proposalNames */\n  dup5\n    /* \"B0843020.sol\":1007:1008  i */\n  dup5\n    /* \"B0843020.sol\":993:1009  proposalNames[i] */\n  dup2\n  mload\n  dup2\n  lt\n  tag_14\n  jumpi\n  invalid\ntag_14:\n  0x20\n  mul\n  0x20\n  add\n  add\n  mload\n    /* \"B0843020.sol\":959:1056  Proposal({\r... */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"B0843020.sol\":1039:1040  0 */\n  0x00\n    /* \"B0843020.sol\":959:1056  Proposal({\r... */\n  dup2\n  mstore\n  pop\n    /* \"B0843020.sol\":944:1057  proposals.push(Proposal({\r... */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"B0843020.sol\":944:1057  proposals.push(Proposal({\r... */\n  swap1\n  0x01\n  dup3\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":924:927  i++ */\n  dup1\n  dup1\n  0x01\n  add\n  swap2\n  pop\n  pop\n    /* \"B0843020.sol\":882:1069  for(uint i = 0; i < proposalNames.length; i++) {\r... */\n  jump(tag_11)\ntag_12:\n  pop\n    /* \"B0843020.sol\":564:1076  constructor(bytes32[] memory proposalNames) public {\r... */\n  pop\n    /* \"B0843020.sol\":36:2867  contract B0843020 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B0843020.sol\":36:2867  contract B0843020 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"B0843020.sol\":36:2867  contract B0843020 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38351021\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"B0843020.sol\":1735:2405  function vote(uint proposal) public {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"B0843020.sol\":1735:2405  function vote(uint proposal) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"B0843020.sol\":2432:2864  function showWinningProposal() public view returns (uint winningProposal) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B0843020.sol\":1215:1708  function giveRightToVote(address voter) public {\r... */\n    tag_5:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"B0843020.sol\":1215:1708  function giveRightToVote(address voter) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"B0843020.sol\":1735:2405  function vote(uint proposal) public {\r... */\n    tag_8:\n        /* \"B0843020.sol\":1782:1802  Voter storage sender */\n      0x00\n        /* \"B0843020.sol\":1805:1811  voters */\n      0x02\n        /* \"B0843020.sol\":1805:1823  voters[msg.sender] */\n      0x00\n        /* \"B0843020.sol\":1812:1822  msg.sender */\n      caller\n        /* \"B0843020.sol\":1805:1823  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1782:1823  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"B0843020.sol\":1952:1957  false */\n      0x00\n        /* \"B0843020.sol\":1937:1957  sender.voted ==false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1937:1943  sender */\n      dup2\n        /* \"B0843020.sol\":1937:1949  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1937:1957  sender.voted ==false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1929:1958  require(sender.voted ==false) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"B0843020.sol\":2037:2038  0 */\n      0x00\n        /* \"B0843020.sol\":2021:2027  sender */\n      dup2\n        /* \"B0843020.sol\":2021:2034  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":2021:2038  sender.weight > 0 */\n      gt\n        /* \"B0843020.sol\":2013:2039  require(sender.weight > 0) */\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n        /* \"B0843020.sol\":2133:2137  true */\n      0x01\n        /* \"B0843020.sol\":2118:2124  sender */\n      dup2\n        /* \"B0843020.sol\":2118:2130  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2118:2137  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2200:2208  proposal */\n      dup2\n        /* \"B0843020.sol\":2177:2183  sender */\n      dup2\n        /* \"B0843020.sol\":2177:2197  sender.votedProposal */\n      0x02\n      add\n        /* \"B0843020.sol\":2177:2208  sender.votedProposal = proposal */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2334:2340  sender */\n      dup1\n        /* \"B0843020.sol\":2334:2347  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":2301:2310  proposals */\n      0x00\n        /* \"B0843020.sol\":2311:2319  proposal */\n      dup4\n        /* \"B0843020.sol\":2301:2320  proposals[proposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2301:2330  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2301:2347  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1735:2405  function vote(uint proposal) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"B0843020.sol\":2432:2864  function showWinningProposal() public view returns (uint winningProposal) {\r... */\n    tag_10:\n        /* \"B0843020.sol\":2484:2504  uint winningProposal */\n      0x00\n        /* \"B0843020.sol\":2517:2529  uint maxVote */\n      dup1\n        /* \"B0843020.sol\":2532:2533  0 */\n      0x00\n        /* \"B0843020.sol\":2517:2533  uint maxVote = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2650:2656  uint i */\n      0x00\n        /* \"B0843020.sol\":2659:2660  0 */\n      dup1\n        /* \"B0843020.sol\":2650:2660  uint i = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2646:2857  for(uint i = 0; i < proposals.length; i++) {\r... */\n    tag_20:\n        /* \"B0843020.sol\":2666:2675  proposals */\n      0x00\n        /* \"B0843020.sol\":2666:2682  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"B0843020.sol\":2662:2663  i */\n      dup2\n        /* \"B0843020.sol\":2662:2682  i < proposals.length */\n      lt\n        /* \"B0843020.sol\":2646:2857  for(uint i = 0; i < proposals.length; i++) {\r... */\n      iszero\n      tag_21\n      jumpi\n        /* \"B0843020.sol\":2732:2739  maxVote */\n      dup2\n        /* \"B0843020.sol\":2707:2716  proposals */\n      0x00\n        /* \"B0843020.sol\":2717:2718  i */\n      dup3\n        /* \"B0843020.sol\":2707:2719  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2707:2729  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2707:2739  proposals[i].voteCount > maxVote */\n      gt\n        /* \"B0843020.sol\":2704:2846  if(proposals[i].voteCount > maxVote) {\r... */\n      iszero\n      tag_25\n      jumpi\n        /* \"B0843020.sol\":2770:2779  proposals */\n      0x00\n        /* \"B0843020.sol\":2780:2781  i */\n      dup2\n        /* \"B0843020.sol\":2770:2782  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2770:2792  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2760:2792  maxVote = proposals[i].voteCount */\n      swap2\n      pop\n        /* \"B0843020.sol\":2829:2830  i */\n      dup1\n        /* \"B0843020.sol\":2811:2830  winningProposal = i */\n      swap3\n      pop\n        /* \"B0843020.sol\":2704:2846  if(proposals[i].voteCount > maxVote) {\r... */\n    tag_25:\n        /* \"B0843020.sol\":2684:2687  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"B0843020.sol\":2646:2857  for(uint i = 0; i < proposals.length; i++) {\r... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"B0843020.sol\":2432:2864  function showWinningProposal() public view returns (uint winningProposal) {\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"B0843020.sol\":1215:1708  function giveRightToVote(address voter) public {\r... */\n    tag_13:\n        /* \"B0843020.sol\":1295:1306  chairperson */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1281:1306  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1281:1291  msg.sender */\n      caller\n        /* \"B0843020.sol\":1281:1306  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"B0843020.sol\":1273:1307  require(msg.sender == chairperson) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"B0843020.sol\":1404:1409  false */\n      0x00\n        /* \"B0843020.sol\":1381:1409  voters[voter].voted == false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1381:1387  voters */\n      0x02\n        /* \"B0843020.sol\":1381:1394  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1388:1393  voter */\n      dup4\n        /* \"B0843020.sol\":1381:1394  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1381:1400  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1381:1409  voters[voter].voted == false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1373:1410  require(voters[voter].voted == false) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"B0843020.sol\":1515:1516  0 */\n      0x00\n        /* \"B0843020.sol\":1491:1497  voters */\n      0x02\n        /* \"B0843020.sol\":1491:1504  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1498:1503  voter */\n      dup4\n        /* \"B0843020.sol\":1491:1504  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1491:1511  voters[voter].weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":1491:1516  voters[voter].weight == 0 */\n      eq\n        /* \"B0843020.sol\":1483:1517  require(voters[voter].weight == 0) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"B0843020.sol\":1642:1643  1 */\n      0x01\n        /* \"B0843020.sol\":1619:1625  voters */\n      0x02\n        /* \"B0843020.sol\":1619:1632  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1626:1631  voter */\n      dup4\n        /* \"B0843020.sol\":1619:1632  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1619:1639  voters[voter].weight */\n      0x00\n      add\n        /* \"B0843020.sol\":1619:1643  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1215:1708  function giveRightToVote(address voter) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158202475e5954c83c2c81a4da92f4809dc198cab9e41c63eeb2a869ee38426d2e3e864736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105b53803806105b58339818101604052602081101561003357600080fd5b810190808051604051939291908464010000000082111561005357600080fd5b8382019150602082018581111561006957600080fd5b825186602082028301116401000000008211171561008657600080fd5b8083526020830192505050908051906020019060200280838360005b838110156100bd5780820151818401526020810190506100a2565b5050505090500160405250505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060008090505b81518110156101fe576000604051806040016040528084848151811061019d57fe5b602002602001015181526020016000815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050808060010191505061017b565b50506103a68061020f6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d6114610092575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100d6565b005b61007c6101a6565b6040518082815260200191505060405180910390f35b6100d4600480360360208110156100a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021d565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff1615151461013b57600080fd5b600081600001541161014c57600080fd5b60018160010160006101000a81548160ff02191690831515021790555081816002018190555080600001546000838154811061018457fe5b9060005260206000209060020201600101600082825401925050819055505050565b6000806000905060008090505b6000805490508110156102185781600082815481106101ce57fe5b906000526020600020906002020160010154111561020b57600081815481106101f357fe5b90600052602060002090600202016001015491508092505b80806001019150506101b3565b505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027757600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146102d757600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461032657600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a723158202475e5954c83c2c81a4da92f4809dc198cab9e41c63eeb2a869ee38426d2e3e864736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x5B5 CODESIZE SUB DUP1 PUSH2 0x5B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA2 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x19D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x17B JUMP JUMPDEST POP POP PUSH2 0x3A6 DUP1 PUSH2 0x20F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x184 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x218 JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1B3 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x24 PUSH22 0xE5954C83C2C81A4DA92F4809DC198CAB9E41C63EEB2A DUP7 SWAP15 0xE3 DUP5 0x26 0xD2 0xE3 0xE8 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:2831:0:-;;;564:512;8:9:-1;5:2;;;30:1;27;20:12;5:2;564:512:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;564:512:0;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;385:12;380:3;373:25;421:4;416:3;412:14;405:21;;0:433;;564:512:0;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;564:512:0;;;;;;;;;;;640:10;626:11;;:24;;;;;;;;;;;;;;;;;;753:1;724:6;:19;731:11;;;;;;;;;;;724:19;;;;;;;;;;;;;;;:26;;:30;;;;886:6;895:1;886:10;;882:187;902:13;:20;898:1;:24;882:187;;;944:9;959:97;;;;;;;;993:13;1007:1;993:16;;;;;;;;;;;;;;959:97;;;;1039:1;959:97;;;944:113;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;944:113:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;924:3;;;;;;;882:187;;;;564:512;36:2831;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d6114610092575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100d6565b005b61007c6101a6565b6040518082815260200191505060405180910390f35b6100d4600480360360208110156100a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021d565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff1615151461013b57600080fd5b600081600001541161014c57600080fd5b60018160010160006101000a81548160ff02191690831515021790555081816002018190555080600001546000838154811061018457fe5b9060005260206000209060020201600101600082825401925050819055505050565b6000806000905060008090505b6000805490508110156102185781600082815481106101ce57fe5b906000526020600020906002020160010154111561020b57600081815481106101f357fe5b90600052602060002090600202016001015491508092505b80806001019150506101b3565b505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027757600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146102d757600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461032657600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a723158202475e5954c83c2c81a4da92f4809dc198cab9e41c63eeb2a869ee38426d2e3e864736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x184 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x218 JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1B3 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x24 PUSH22 0xE5954C83C2C81A4DA92F4809DC198CAB9E41C63EEB2A DUP7 SWAP15 0xE3 DUP5 0x26 0xD2 0xE3 0xE8 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:2831:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36:2831:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1735:670;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1735:670:0;;;;;;;;;;;;;;;;;:::i;:::-;;2432:432;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1215:493;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1215:493:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1735:670;1782:20;1805:6;:18;1812:10;1805:18;;;;;;;;;;;;;;;1782:41;;1952:5;1937:20;;:6;:12;;;;;;;;;;;;:20;;;1929:29;;;;;;2037:1;2021:6;:13;;;:17;2013:26;;;;;;2133:4;2118:6;:12;;;:19;;;;;;;;;;;;;;;;;;2200:8;2177:6;:20;;:31;;;;2334:6;:13;;;2301:9;2311:8;2301:19;;;;;;;;;;;;;;;;;;:29;;;:46;;;;;;;;;;;1735:670;;:::o;2432:432::-;2484:20;2517:12;2532:1;2517:16;;2650:6;2659:1;2650:10;;2646:211;2666:9;:16;;;;2662:1;:20;2646:211;;;2732:7;2707:9;2717:1;2707:12;;;;;;;;;;;;;;;;;;:22;;;:32;2704:142;;;2770:9;2780:1;2770:12;;;;;;;;;;;;;;;;;;:22;;;2760:32;;2829:1;2811:19;;2704:142;2684:3;;;;;;;2646:211;;;;2432:432;;:::o;1215:493::-;1295:11;;;;;;;;;;;1281:25;;:10;:25;;;1273:34;;;;;;1404:5;1381:28;;:6;:13;1388:5;1381:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;1373:37;;;;;;1515:1;1491:6;:13;1498:5;1491:13;;;;;;;;;;;;;;;:20;;;:25;1483:34;;;;;;1642:1;1619:6;:13;1626:5;1619:13;;;;;;;;;;;;;;;:20;;:24;;;;1215:493;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "186800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"giveRightToVote(address)": "23122",
								"showWinningProposal()": "infinite",
								"vote(uint256)": "65443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 2867,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "MSTORE"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "MLOAD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSHSIZE"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "CODESIZE"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SUB"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSHSIZE"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP4"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "CODECOPY"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP2"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP2"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "ADD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP2"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "ADD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "MLOAD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "MLOAD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP4"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP3"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP2"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP5"
								},
								{
									"begin": 19,
									"end": 30,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 14,
									"end": 17,
									"name": "DUP3"
								},
								{
									"begin": 11,
									"end": 31,
									"name": "GT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPI"
								},
								{
									"begin": 44,
									"end": 45,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 41,
									"end": 42,
									"name": "DUP1"
								},
								{
									"begin": 34,
									"end": 46,
									"name": "REVERT"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 8,
									"end": 10,
									"name": "JUMPDEST"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "DUP4"
								},
								{
									"begin": 66,
									"end": 69,
									"name": "DUP3"
								},
								{
									"begin": 62,
									"end": 83,
									"name": "ADD"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "SWAP2"
								},
								{
									"begin": 55,
									"end": 83,
									"name": "POP"
								},
								{
									"begin": 123,
									"end": 127,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 118,
									"end": 121,
									"name": "DUP3"
								},
								{
									"begin": 114,
									"end": 128,
									"name": "ADD"
								},
								{
									"begin": 159,
									"end": 168,
									"name": "DUP6"
								},
								{
									"begin": 141,
									"end": 157,
									"name": "DUP2"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "GT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "ISZERO"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPI"
								},
								{
									"begin": 182,
									"end": 183,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 179,
									"end": 180,
									"name": "DUP1"
								},
								{
									"begin": 172,
									"end": 184,
									"name": "REVERT"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 135,
									"end": 137,
									"name": "JUMPDEST"
								},
								{
									"begin": 219,
									"end": 222,
									"name": "DUP3"
								},
								{
									"begin": 213,
									"end": 223,
									"name": "MLOAD"
								},
								{
									"begin": 331,
									"end": 340,
									"name": "DUP7"
								},
								{
									"begin": 325,
									"end": 327,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 311,
									"end": 323,
									"name": "DUP3"
								},
								{
									"begin": 307,
									"end": 328,
									"name": "MUL"
								},
								{
									"begin": 289,
									"end": 305,
									"name": "DUP4"
								},
								{
									"begin": 285,
									"end": 329,
									"name": "ADD"
								},
								{
									"begin": 282,
									"end": 341,
									"name": "GT"
								},
								{
									"begin": 261,
									"end": 272,
									"name": "PUSH",
									"value": "100000000"
								},
								{
									"begin": 247,
									"end": 259,
									"name": "DUP3"
								},
								{
									"begin": 244,
									"end": 273,
									"name": "GT"
								},
								{
									"begin": 233,
									"end": 349,
									"name": "OR"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "ISZERO"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPI"
								},
								{
									"begin": 362,
									"end": 363,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 359,
									"end": 360,
									"name": "DUP1"
								},
								{
									"begin": 352,
									"end": 364,
									"name": "REVERT"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 230,
									"end": 232,
									"name": "JUMPDEST"
								},
								{
									"begin": 385,
									"end": 397,
									"name": "DUP1"
								},
								{
									"begin": 380,
									"end": 383,
									"name": "DUP4"
								},
								{
									"begin": 373,
									"end": 398,
									"name": "MSTORE"
								},
								{
									"begin": 421,
									"end": 425,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 416,
									"end": 419,
									"name": "DUP4"
								},
								{
									"begin": 412,
									"end": 426,
									"name": "ADD"
								},
								{
									"begin": 405,
									"end": 426,
									"name": "SWAP3"
								},
								{
									"begin": 405,
									"end": 426,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 433,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 433,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "MLOAD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "ADD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "MUL"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP4"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "DUP4"
								},
								{
									"begin": 23,
									"end": 24,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP4"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "LT"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "ISZERO"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPI"
								},
								{
									"begin": 99,
									"end": 100,
									"name": "DUP1"
								},
								{
									"begin": 94,
									"end": 97,
									"name": "DUP3"
								},
								{
									"begin": 90,
									"end": 101,
									"name": "ADD"
								},
								{
									"begin": 84,
									"end": 102,
									"name": "MLOAD"
								},
								{
									"begin": 80,
									"end": 81,
									"name": "DUP2"
								},
								{
									"begin": 75,
									"end": 78,
									"name": "DUP5"
								},
								{
									"begin": 71,
									"end": 82,
									"name": "ADD"
								},
								{
									"begin": 64,
									"end": 103,
									"name": "MSTORE"
								},
								{
									"begin": 52,
									"end": 54,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 49,
									"end": 50,
									"name": "DUP2"
								},
								{
									"begin": 45,
									"end": 55,
									"name": "ADD"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "SWAP1"
								},
								{
									"begin": 40,
									"end": 55,
									"name": "POP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMP"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 8,
									"end": 108,
									"name": "JUMPDEST"
								},
								{
									"begin": 12,
									"end": 26,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "SWAP1"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "ADD"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "MSTORE"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 640,
									"end": 650,
									"name": "CALLER"
								},
								{
									"begin": 626,
									"end": 637,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 626,
									"end": 637,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "EXP"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "DUP2"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "SLOAD"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "DUP2"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "MUL"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "NOT"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "AND"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "SWAP1"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "DUP4"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "AND"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "MUL"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "OR"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "SWAP1"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "SSTORE"
								},
								{
									"begin": 626,
									"end": 650,
									"name": "POP"
								},
								{
									"begin": 753,
									"end": 754,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 724,
									"end": 730,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "SWAP1"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "SLOAD"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "SWAP1"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "EXP"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "SWAP1"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "DIV"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 731,
									"end": 742,
									"name": "AND"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "AND"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "AND"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "DUP2"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "MSTORE"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "ADD"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "SWAP1"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "DUP2"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "MSTORE"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "ADD"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 724,
									"end": 743,
									"name": "KECCAK256"
								},
								{
									"begin": 724,
									"end": 750,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 724,
									"end": 750,
									"name": "ADD"
								},
								{
									"begin": 724,
									"end": 754,
									"name": "DUP2"
								},
								{
									"begin": 724,
									"end": 754,
									"name": "SWAP1"
								},
								{
									"begin": 724,
									"end": 754,
									"name": "SSTORE"
								},
								{
									"begin": 724,
									"end": 754,
									"name": "POP"
								},
								{
									"begin": 886,
									"end": 892,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 895,
									"end": 896,
									"name": "DUP1"
								},
								{
									"begin": 886,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 886,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "JUMPDEST"
								},
								{
									"begin": 902,
									"end": 915,
									"name": "DUP2"
								},
								{
									"begin": 902,
									"end": 922,
									"name": "MLOAD"
								},
								{
									"begin": 898,
									"end": 899,
									"name": "DUP2"
								},
								{
									"begin": 898,
									"end": 922,
									"name": "LT"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "ISZERO"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "JUMPI"
								},
								{
									"begin": 944,
									"end": 953,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "MLOAD"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "DUP1"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "DUP1"
								},
								{
									"begin": 993,
									"end": 1006,
									"name": "DUP5"
								},
								{
									"begin": 1007,
									"end": 1008,
									"name": "DUP5"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "MLOAD"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "DUP2"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "LT"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "JUMPI"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "INVALID"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "JUMPDEST"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "MUL"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "ADD"
								},
								{
									"begin": 993,
									"end": 1009,
									"name": "MLOAD"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "ADD"
								},
								{
									"begin": 1039,
									"end": 1040,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1056,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "DUP3"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SUB"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "MSTORE"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "KECCAK256"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "MUL"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP2"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP3"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP2"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SWAP2"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "DUP3"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "MLOAD"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "DUP2"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SSTORE"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "DUP3"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "MLOAD"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "DUP2"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "SSTORE"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1057,
									"name": "POP"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "DUP1"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "DUP1"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "ADD"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "SWAP2"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "POP"
								},
								{
									"begin": 924,
									"end": 927,
									"name": "POP"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "JUMP"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "JUMPDEST"
								},
								{
									"begin": 882,
									"end": 1069,
									"name": "POP"
								},
								{
									"begin": 564,
									"end": 1076,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "CODECOPY"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2867,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158202475e5954c83c2c81a4da92f4809dc198cab9e41c63eeb2a869ee38426d2e3e864736f6c63430005110032",
									".code": [
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "SHR"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "121B93F"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "38351021"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "9E7B8D61"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2867,
											"name": "REVERT"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "JUMPDEST"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "DUP1"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "DUP2"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "DUP1"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "DUP1"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "ADD"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "SWAP3"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "SWAP2"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "SWAP1"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "POP"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "POP"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "POP"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "JUMPDEST"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "STOP"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "JUMPDEST"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "MLOAD"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "DUP3"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "DUP2"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "MSTORE"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "ADD"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "MLOAD"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "DUP1"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "SWAP2"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "SUB"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "RETURN"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "DUP1"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "DUP2"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "ADD"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "DUP1"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "DUP1"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "AND"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "ADD"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "SWAP3"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "SWAP2"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "SWAP1"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "JUMPDEST"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "STOP"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "JUMPDEST"
										},
										{
											"begin": 1782,
											"end": 1802,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1812,
											"end": 1822,
											"name": "CALLER"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "AND"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "AND"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "MSTORE"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "DUP2"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "MSTORE"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "KECCAK256"
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "SWAP1"
										},
										{
											"begin": 1782,
											"end": 1823,
											"name": "POP"
										},
										{
											"begin": 1952,
											"end": 1957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "ISZERO"
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "ISZERO"
										},
										{
											"begin": 1937,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "ADD"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "SWAP1"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "SLOAD"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "SWAP1"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "EXP"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "SWAP1"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "DIV"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1937,
											"end": 1949,
											"name": "AND"
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "ISZERO"
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "ISZERO"
										},
										{
											"begin": 1937,
											"end": 1957,
											"name": "EQ"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "JUMPI"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "DUP1"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "REVERT"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1929,
											"end": 1958,
											"name": "JUMPDEST"
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP2"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "ADD"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "SLOAD"
										},
										{
											"begin": 2021,
											"end": 2038,
											"name": "GT"
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "JUMPI"
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "DUP1"
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "REVERT"
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2013,
											"end": 2039,
											"name": "JUMPDEST"
										},
										{
											"begin": 2133,
											"end": 2137,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2124,
											"name": "DUP2"
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "ADD"
										},
										{
											"begin": 2118,
											"end": 2130,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "EXP"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "DUP2"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "SLOAD"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "DUP2"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "MUL"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "NOT"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "AND"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "SWAP1"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "DUP4"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "ISZERO"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "ISZERO"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "MUL"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "OR"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "SWAP1"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "SSTORE"
										},
										{
											"begin": 2118,
											"end": 2137,
											"name": "POP"
										},
										{
											"begin": 2200,
											"end": 2208,
											"name": "DUP2"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP2"
										},
										{
											"begin": 2177,
											"end": 2197,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2177,
											"end": 2197,
											"name": "ADD"
										},
										{
											"begin": 2177,
											"end": 2208,
											"name": "DUP2"
										},
										{
											"begin": 2177,
											"end": 2208,
											"name": "SWAP1"
										},
										{
											"begin": 2177,
											"end": 2208,
											"name": "SSTORE"
										},
										{
											"begin": 2177,
											"end": 2208,
											"name": "POP"
										},
										{
											"begin": 2334,
											"end": 2340,
											"name": "DUP1"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "ADD"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "SLOAD"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2311,
											"end": 2319,
											"name": "DUP4"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "SLOAD"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "LT"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "JUMPI"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "INVALID"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "JUMPDEST"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "SWAP1"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "MSTORE"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "KECCAK256"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "SWAP1"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "MUL"
										},
										{
											"begin": 2301,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2301,
											"end": 2330,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2301,
											"end": 2330,
											"name": "ADD"
										},
										{
											"begin": 2301,
											"end": 2330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "DUP3"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "DUP3"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "SLOAD"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "ADD"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "SWAP3"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "POP"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "POP"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "DUP2"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "SWAP1"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "SSTORE"
										},
										{
											"begin": 2301,
											"end": 2347,
											"name": "POP"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "POP"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "POP"
										},
										{
											"begin": 1735,
											"end": 2405,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "JUMPDEST"
										},
										{
											"begin": 2484,
											"end": 2504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2529,
											"name": "DUP1"
										},
										{
											"begin": 2532,
											"end": 2533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2533,
											"name": "SWAP1"
										},
										{
											"begin": 2517,
											"end": 2533,
											"name": "POP"
										},
										{
											"begin": 2650,
											"end": 2656,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2659,
											"end": 2660,
											"name": "DUP1"
										},
										{
											"begin": 2650,
											"end": 2660,
											"name": "SWAP1"
										},
										{
											"begin": 2650,
											"end": 2660,
											"name": "POP"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "JUMPDEST"
										},
										{
											"begin": 2666,
											"end": 2675,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2682,
											"name": "DUP1"
										},
										{
											"begin": 2666,
											"end": 2682,
											"name": "SLOAD"
										},
										{
											"begin": 2666,
											"end": 2682,
											"name": "SWAP1"
										},
										{
											"begin": 2666,
											"end": 2682,
											"name": "POP"
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "DUP2"
										},
										{
											"begin": 2662,
											"end": 2682,
											"name": "LT"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "ISZERO"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "JUMPI"
										},
										{
											"begin": 2732,
											"end": 2739,
											"name": "DUP2"
										},
										{
											"begin": 2707,
											"end": 2716,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2717,
											"end": 2718,
											"name": "DUP3"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "DUP2"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "SLOAD"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "DUP2"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "LT"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "JUMPI"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "INVALID"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "JUMPDEST"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "SWAP1"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "MSTORE"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "KECCAK256"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "SWAP1"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "MUL"
										},
										{
											"begin": 2707,
											"end": 2719,
											"name": "ADD"
										},
										{
											"begin": 2707,
											"end": 2729,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2707,
											"end": 2729,
											"name": "ADD"
										},
										{
											"begin": 2707,
											"end": 2729,
											"name": "SLOAD"
										},
										{
											"begin": 2707,
											"end": 2739,
											"name": "GT"
										},
										{
											"begin": 2704,
											"end": 2846,
											"name": "ISZERO"
										},
										{
											"begin": 2704,
											"end": 2846,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2704,
											"end": 2846,
											"name": "JUMPI"
										},
										{
											"begin": 2770,
											"end": 2779,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "DUP2"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "DUP2"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "SLOAD"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "DUP2"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "LT"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "JUMPI"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "INVALID"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "JUMPDEST"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "SWAP1"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "MSTORE"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "KECCAK256"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "SWAP1"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "MUL"
										},
										{
											"begin": 2770,
											"end": 2782,
											"name": "ADD"
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "ADD"
										},
										{
											"begin": 2770,
											"end": 2792,
											"name": "SLOAD"
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "SWAP2"
										},
										{
											"begin": 2760,
											"end": 2792,
											"name": "POP"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP1"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "SWAP3"
										},
										{
											"begin": 2811,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2704,
											"end": 2846,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2704,
											"end": 2846,
											"name": "JUMPDEST"
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "DUP1"
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "ADD"
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "SWAP2"
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "POP"
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "POP"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "JUMP"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "JUMPDEST"
										},
										{
											"begin": 2646,
											"end": 2857,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "POP"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "SWAP1"
										},
										{
											"begin": 2432,
											"end": 2864,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "JUMPDEST"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "SLOAD"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "EXP"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "SWAP1"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "DIV"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1295,
											"end": 1306,
											"name": "AND"
										},
										{
											"begin": 1281,
											"end": 1306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1306,
											"name": "AND"
										},
										{
											"begin": 1281,
											"end": 1291,
											"name": "CALLER"
										},
										{
											"begin": 1281,
											"end": 1306,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1281,
											"end": 1306,
											"name": "AND"
										},
										{
											"begin": 1281,
											"end": 1306,
											"name": "EQ"
										},
										{
											"begin": 1273,
											"end": 1307,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1273,
											"end": 1307,
											"name": "JUMPI"
										},
										{
											"begin": 1273,
											"end": 1307,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1307,
											"name": "DUP1"
										},
										{
											"begin": 1273,
											"end": 1307,
											"name": "REVERT"
										},
										{
											"begin": 1273,
											"end": 1307,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1273,
											"end": 1307,
											"name": "JUMPDEST"
										},
										{
											"begin": 1404,
											"end": 1409,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "ISZERO"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "ISZERO"
										},
										{
											"begin": 1381,
											"end": 1387,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1393,
											"name": "DUP4"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "AND"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "AND"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP2"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "DUP2"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "MSTORE"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1394,
											"name": "KECCAK256"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "ADD"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "SLOAD"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "EXP"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "SWAP1"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "DIV"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1381,
											"end": 1400,
											"name": "AND"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "ISZERO"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "ISZERO"
										},
										{
											"begin": 1381,
											"end": 1409,
											"name": "EQ"
										},
										{
											"begin": 1373,
											"end": 1410,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1373,
											"end": 1410,
											"name": "JUMPI"
										},
										{
											"begin": 1373,
											"end": 1410,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1410,
											"name": "DUP1"
										},
										{
											"begin": 1373,
											"end": 1410,
											"name": "REVERT"
										},
										{
											"begin": 1373,
											"end": 1410,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1373,
											"end": 1410,
											"name": "JUMPDEST"
										},
										{
											"begin": 1515,
											"end": 1516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1497,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1498,
											"end": 1503,
											"name": "DUP4"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "AND"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "AND"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "DUP2"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "MSTORE"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "ADD"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "SWAP1"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "DUP2"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "MSTORE"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "ADD"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1504,
											"name": "KECCAK256"
										},
										{
											"begin": 1491,
											"end": 1511,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1511,
											"name": "ADD"
										},
										{
											"begin": 1491,
											"end": 1511,
											"name": "SLOAD"
										},
										{
											"begin": 1491,
											"end": 1516,
											"name": "EQ"
										},
										{
											"begin": 1483,
											"end": 1517,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1483,
											"end": 1517,
											"name": "JUMPI"
										},
										{
											"begin": 1483,
											"end": 1517,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1517,
											"name": "DUP1"
										},
										{
											"begin": 1483,
											"end": 1517,
											"name": "REVERT"
										},
										{
											"begin": 1483,
											"end": 1517,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1483,
											"end": 1517,
											"name": "JUMPDEST"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1619,
											"end": 1625,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "DUP4"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "AND"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "AND"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "MSTORE"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "ADD"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "SWAP1"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "DUP2"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "MSTORE"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "ADD"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1632,
											"name": "KECCAK256"
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1619,
											"end": 1639,
											"name": "ADD"
										},
										{
											"begin": 1619,
											"end": 1643,
											"name": "DUP2"
										},
										{
											"begin": 1619,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 1619,
											"end": 1643,
											"name": "SSTORE"
										},
										{
											"begin": 1619,
											"end": 1643,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "POP"
										},
										{
											"begin": 1215,
											"end": 1708,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"giveRightToVote(address)": "9e7b8d61",
							"showWinningProposal()": "38351021",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalNames\",\"type\":\"bytes32[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showWinningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B0843020.sol\":\"B0843020\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B0843020.sol\":{\"keccak256\":\"0xbab8a81dd643b538aa6a607dc14901605a78eb22368347eaae46f1c167166cd2\",\"urls\":[\"bzz-raw://9d3d63132f0114e7d0b0826082351ff13a30406dc887416f8ed9b598be25a920\",\"dweb:/ipfs/QmTjw1saDrNM4WNXzMioGcgibbiHoCCNJQDdUbT3LtvP9e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "B0843020.sol:B0843020",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)6_storage)dyn_storage"
							},
							{
								"astId": 18,
								"contract": "B0843020.sol:B0843020",
								"label": "chairperson",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "B0843020.sol:B0843020",
								"label": "voters",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Voter)13_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)6_storage)dyn_storage": {
								"base": "t_struct(Proposal)6_storage",
								"encoding": "dynamic_array",
								"label": "struct B0843020.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)13_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct B0843020.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)13_storage"
							},
							"t_struct(Proposal)6_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Proposal",
								"members": [
									{
										"astId": 3,
										"contract": "B0843020.sol:B0843020",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 5,
										"contract": "B0843020.sol:B0843020",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)13_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Voter",
								"members": [
									{
										"astId": 8,
										"contract": "B0843020.sol:B0843020",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "B0843020.sol:B0843020",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 12,
										"contract": "B0843020.sol:B0843020",
										"label": "votedProposal",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"B0843020.sol": {
				"ast": {
					"absolutePath": "B0843020.sol",
					"exportedSymbols": {
						"B0843020": [
							193
						]
					},
					"id": 194,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193
							],
							"name": "B0843020",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "B0843020.Proposal",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "136:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "136:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "159:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "159:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "109:72:0",
									"visibility": "public"
								},
								{
									"canonicalName": "B0843020.Voter",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 8,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "250:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "250:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "272:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 9,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "272:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"name": "votedProposal",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "293:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "293:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "226:93:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "332:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
										"typeString": "struct B0843020.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 14,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "332:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$6_storage_ptr",
												"typeString": "struct B0843020.Proposal"
											}
										},
										"id": 15,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "332:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage_ptr",
											"typeString": "struct B0843020.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "374:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "453:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
										"typeString": "mapping(address => struct B0843020.Voter)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "461:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "453:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
											"typeString": "mapping(address => struct B0843020.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 20,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "472:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
												"typeString": "struct B0843020.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "615:461:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 28,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "626:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 29,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "640:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "640:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "626:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 32,
												"nodeType": "ExpressionStatement",
												"src": "626:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 33,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "724:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 35,
															"indexExpression": {
																"argumentTypes": null,
																"id": 34,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "731:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "724:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "724:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "753:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "724:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "724:30:0"
											},
											{
												"body": {
													"id": 62,
													"nodeType": "Block",
													"src": "929:140:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 55,
																					"name": "proposalNames",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 25,
																					"src": "993:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				},
																				"id": 57,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 56,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 41,
																					"src": "1007:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "993:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"hexValue": "30",
																				"id": 58,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1039:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 54,
																			"name": "Proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 6,
																			"src": "959:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Proposal_$6_storage_ptr_$",
																				"typeString": "type(struct B0843020.Proposal storage pointer)"
																			}
																		},
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"name",
																			"voteCount"
																		],
																		"nodeType": "FunctionCall",
																		"src": "959:97:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$6_memory",
																			"typeString": "struct B0843020.Proposal memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Proposal_$6_memory",
																			"typeString": "struct B0843020.Proposal memory"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 51,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "944:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																			"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																		}
																	},
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "944:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$6_storage_$returns$_t_uint256_$",
																		"typeString": "function (struct B0843020.Proposal storage ref) returns (uint256)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "944:113:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 61,
															"nodeType": "ExpressionStatement",
															"src": "944:113:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 44,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 45,
															"name": "proposalNames",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "902:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "902:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "898:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 63,
												"initializationExpression": {
													"assignments": [
														41
													],
													"declarations": [
														{
															"constant": false,
															"id": 41,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 63,
															"src": "886:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 40,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "886:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 43,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "895:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "886:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "924:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 48,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "924:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 50,
													"nodeType": "ExpressionStatement",
													"src": "924:3:0"
												},
												"nodeType": "ForStatement",
												"src": "882:187:0"
											}
										]
									},
									"documentation": null,
									"id": 65,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "proposalNames",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "576:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 23,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 24,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "576:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "575:32:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:0:0"
									},
									"scope": 193,
									"src": "564:512:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "1262:446:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 71,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "1281:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1281:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1295:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1281:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 70,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1273:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1273:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1273:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 78,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1381:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 80,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 79,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1388:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1381:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1381:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1404:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1381:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1373:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 92,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 87,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1491:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 89,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 88,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "1498:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1491:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "1491:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1515:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1491:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1483:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1483:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1483:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 95,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1619:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 97,
															"indexExpression": {
																"argumentTypes": null,
																"id": 96,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1626:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1619:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "1619:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1642:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1619:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1619:24:0"
											}
										]
									},
									"documentation": null,
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "1240:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1239:15:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:0:0"
									},
									"scope": 193,
									"src": "1215:493:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1771:634:0",
										"statements": [
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1782:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
															"typeString": "struct B0843020.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 108,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 13,
															"src": "1782:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 110,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1805:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
															"typeString": "mapping(address => struct B0843020.Voter storage ref)"
														}
													},
													"id": 113,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 111,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1812:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1812:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1805:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$13_storage",
														"typeString": "struct B0843020.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1782:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 116,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "1937:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1937:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 118,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1952:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1937:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "1929:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 123,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "2021:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 124,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "2021:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2037:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2021:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "2013:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2013:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2013:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 129,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2118:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2133:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2118:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "2118:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 135,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2177:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votedProposal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "2177:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 138,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2200:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2177:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2177:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 141,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2301:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																	"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																}
															},
															"id": 143,
															"indexExpression": {
																"argumentTypes": null,
																"id": 142,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2311:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2301:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_storage",
																"typeString": "struct B0843020.Proposal storage ref"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2301:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 145,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2334:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 146,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2334:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2301:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "2301:46:0"
											}
										]
									},
									"documentation": null,
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"name": "proposal",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1749:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1748:15:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:0"
									},
									"scope": 193,
									"src": "1735:670:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2506:358:0",
										"statements": [
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"name": "maxVote",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2517:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 155,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 158,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2532:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2517:16:0"
											},
											{
												"body": {
													"id": 189,
													"nodeType": "Block",
													"src": "2689:168:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 170,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "2707:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																				"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 172,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 171,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 160,
																			"src": "2717:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2707:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$6_storage",
																			"typeString": "struct B0843020.Proposal storage ref"
																		}
																	},
																	"id": 173,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "2707:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "maxVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "2732:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2707:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 188,
															"nodeType": "IfStatement",
															"src": "2704:142:0",
															"trueBody": {
																"id": 187,
																"nodeType": "Block",
																"src": "2741:105:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 176,
																				"name": "maxVote",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "2760:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 177,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 16,
																						"src": "2770:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																							"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 179,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 178,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 160,
																						"src": "2780:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2770:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$6_storage",
																						"typeString": "struct B0843020.Proposal storage ref"
																					}
																				},
																				"id": 180,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5,
																				"src": "2770:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2760:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 182,
																		"nodeType": "ExpressionStatement",
																		"src": "2760:32:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 183,
																				"name": "winningProposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 153,
																				"src": "2811:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 184,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 160,
																				"src": "2829:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2811:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 186,
																		"nodeType": "ExpressionStatement",
																		"src": "2811:19:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 163,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "2662:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 164,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2666:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2666:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2662:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"initializationExpression": {
													"assignments": [
														160
													],
													"declarations": [
														{
															"constant": false,
															"id": 160,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 190,
															"src": "2650:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 159,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2650:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 162,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2659:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2650:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2684:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 167,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "2684:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 169,
													"nodeType": "ExpressionStatement",
													"src": "2684:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2646:211:0"
											}
										]
									},
									"documentation": null,
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showWinningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2460:2:0"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2484:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2484:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2483:22:0"
									},
									"scope": 193,
									"src": "2432:432:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 194,
							"src": "36:2831:0"
						}
					],
					"src": "0:2867:0"
				},
				"id": 0
			}
		}
	}
}