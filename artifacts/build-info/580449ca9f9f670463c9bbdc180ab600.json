{
	"id": "580449ca9f9f670463c9bbdc180ab600",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"B0843020.sol": {
				"content": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract B0843020 {\r\n     \r\n    struct Proposal {\r\n        string name;  //候選人的姓名\r\n        uint voteCount;//候選人的投票計數\r\n    }\r\n     \r\n    struct Voter {\r\n        uint weight;    //投票人的權重\r\n        bool voted;     //投票人是否投過票了\r\n        uint votedProposal; //投票人投給誰\r\n    }\r\n     \r\n    Proposal[] proposals; //候選人\r\n    address leader; //發起投票的人(這個投票合約的擁有者)\r\n    mapping(address => Voter) voters; //投票者地址與投票狀態的變數\r\n     \r\n    //建構子,在建構的時候順便紀錄發起人(leader)是誰\r\n    constructor() public {\r\n        leader = msg.sender; //發起投票的人\r\n        voters[leader].weight = 1; //發起投票的人的投票權重(發起人也可以投1票)\r\n\r\n        //把所有候選人加進提案列表\r\n        proposals.push(Proposal({\r\n            name: \"阿糖\",\r\n            voteCount: 0\r\n        }));\r\n        \r\n        proposals.push(Proposal({\r\n            name: \"力量人\",\r\n            voteCount: 0\r\n        }));\r\n    }\r\n     \r\n    //發起投票的人指定誰有權利投票的function\r\n    //預防有人惡意使用多個帳號影響投票公正性\r\n    function giveRightToVote(address voter) public {\r\n        require(msg.sender == leader);//確認調用這個function的人是發起投票的人\r\n        require(voters[voter].voted == false);//確認要被授權投票權利的人是還沒有投票的人\r\n        require(voters[voter].weight == 0);//確認要被授權投票權利的人是沒有投票權利的人(投票權重0)\r\n         \r\n        voters[voter].weight = 1;//將要被授權投票權利的人的投票權重設為1\r\n    }\r\n     \r\n    //投票\r\n    function vote(uint proposal) public {\r\n        Voter storage sender = voters[msg.sender];//用storage修飾這個變數讓這個投票者的資訊會被記錄在區塊鏈上\r\n         \r\n        require(sender.voted ==false);//確認投票者是還沒有投過票的人\r\n        require(sender.weight > 0);//確認投票者是有權利投票的人(投票權重>0)\r\n         \r\n        sender.voted = true;//將投票者設為已投票\r\n        sender.votedProposal = proposal;//將投票者投的提案記錄在會被備份在區塊鏈的變數上\r\n         \r\n        proposals[proposal].voteCount += sender.weight;//將提該案的人數加上投票者投的權重\r\n    }\r\n     \r\n    //開票\r\n    function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r\n        uint maxVote = 0; //將目前最多的得票數設為0\r\n         \r\n        //迴圈找出所有提案得票數最多的\r\n        for(uint i = 0; i < proposals.length; i++) {\r\n            if(proposals[i].voteCount > maxVote) {\r\n                maxVote = proposals[i].voteCount;\r\n                winningProposal = i;\r\n                winningProposalName=proposals[i].name;\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"B0843020.sol": {
				"B0843020": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showWinningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "winningProposalName",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"B0843020.sol\":36:2985  contract B0843020 {\r... */\n  mstore(0x40, 0x80)\n    /* \"B0843020.sol\":657:1107  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"B0843020.sol\":657:1107  constructor() public {\r... */\n  pop\n    /* \"B0843020.sol\":698:708  msg.sender */\n  caller\n    /* \"B0843020.sol\":689:695  leader */\n  0x01\n  0x00\n    /* \"B0843020.sol\":689:708  leader = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":764:765  1 */\n  0x01\n    /* \"B0843020.sol\":740:746  voters */\n  0x02\n    /* \"B0843020.sol\":740:754  voters[leader] */\n  0x00\n    /* \"B0843020.sol\":747:753  leader */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B0843020.sol\":740:754  voters[leader] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"B0843020.sol\":740:761  voters[leader].weight */\n  0x00\n  add\n    /* \"B0843020.sol\":740:765  voters[leader].weight = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":889:898  proposals */\n  0x00\n    /* \"B0843020.sol\":904:981  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0xe998bfe7b3960000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"B0843020.sol\":968:969  0 */\n  0x00\n    /* \"B0843020.sol\":904:981  Proposal({\r... */\n  dup2\n  mstore\n  pop\n    /* \"B0843020.sol\":889:982  proposals.push(Proposal({\r... */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"B0843020.sol\":889:982  proposals.push(Proposal({\r... */\n  swap1\n  0x01\n  dup3\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":1003:1012  proposals */\n  0x00\n    /* \"B0843020.sol\":1018:1098  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0xe58a9be9878fe4baba0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"B0843020.sol\":1085:1086  0 */\n  0x00\n    /* \"B0843020.sol\":1018:1098  Proposal({\r... */\n  dup2\n  mstore\n  pop\n    /* \"B0843020.sol\":1003:1099  proposals.push(Proposal({\r... */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"B0843020.sol\":1003:1099  proposals.push(Proposal({\r... */\n  swap1\n  0x01\n  dup3\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_8:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":36:2985  contract B0843020 {\r... */\n  jump(tag_9)\ntag_6:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B0843020.sol\":36:2985  contract B0843020 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"B0843020.sol\":36:2985  contract B0843020 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38351021\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"B0843020.sol\":1761:2431  function vote(uint proposal) public {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"B0843020.sol\":1761:2431  function vote(uint proposal) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"B0843020.sol\":2458:2982  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_11:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_11)\n    tag_13:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"B0843020.sol\":2458:2982  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_14\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_14:\n      pop\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B0843020.sol\":1246:1734  function giveRightToVote(address voter) public {\r... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"B0843020.sol\":1246:1734  function giveRightToVote(address voter) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"B0843020.sol\":1761:2431  function vote(uint proposal) public {\r... */\n    tag_8:\n        /* \"B0843020.sol\":1808:1828  Voter storage sender */\n      0x00\n        /* \"B0843020.sol\":1831:1837  voters */\n      0x02\n        /* \"B0843020.sol\":1831:1849  voters[msg.sender] */\n      0x00\n        /* \"B0843020.sol\":1838:1848  msg.sender */\n      caller\n        /* \"B0843020.sol\":1831:1849  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1808:1849  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"B0843020.sol\":1978:1983  false */\n      0x00\n        /* \"B0843020.sol\":1963:1983  sender.voted ==false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1963:1969  sender */\n      dup2\n        /* \"B0843020.sol\":1963:1975  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1963:1983  sender.voted ==false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1955:1984  require(sender.voted ==false) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"B0843020.sol\":2063:2064  0 */\n      0x00\n        /* \"B0843020.sol\":2047:2053  sender */\n      dup2\n        /* \"B0843020.sol\":2047:2060  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":2047:2064  sender.weight > 0 */\n      gt\n        /* \"B0843020.sol\":2039:2065  require(sender.weight > 0) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"B0843020.sol\":2159:2163  true */\n      0x01\n        /* \"B0843020.sol\":2144:2150  sender */\n      dup2\n        /* \"B0843020.sol\":2144:2156  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2144:2163  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2226:2234  proposal */\n      dup2\n        /* \"B0843020.sol\":2203:2209  sender */\n      dup2\n        /* \"B0843020.sol\":2203:2223  sender.votedProposal */\n      0x02\n      add\n        /* \"B0843020.sol\":2203:2234  sender.votedProposal = proposal */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2360:2366  sender */\n      dup1\n        /* \"B0843020.sol\":2360:2373  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":2327:2336  proposals */\n      0x00\n        /* \"B0843020.sol\":2337:2345  proposal */\n      dup4\n        /* \"B0843020.sol\":2327:2346  proposals[proposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2327:2356  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2327:2373  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1761:2431  function vote(uint proposal) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"B0843020.sol\":2458:2982  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n    tag_10:\n        /* \"B0843020.sol\":2510:2530  uint winningProposal */\n      0x00\n        /* \"B0843020.sol\":2533:2566  string memory winningProposalName */\n      0x60\n        /* \"B0843020.sol\":2579:2591  uint maxVote */\n      0x00\n        /* \"B0843020.sol\":2594:2595  0 */\n      dup1\n        /* \"B0843020.sol\":2579:2595  uint maxVote = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2712:2718  uint i */\n      0x00\n        /* \"B0843020.sol\":2721:2722  0 */\n      dup1\n        /* \"B0843020.sol\":2712:2722  uint i = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2708:2975  for(uint i = 0; i < proposals.length; i++) {\r... */\n    tag_24:\n        /* \"B0843020.sol\":2728:2737  proposals */\n      0x00\n        /* \"B0843020.sol\":2728:2744  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"B0843020.sol\":2724:2725  i */\n      dup2\n        /* \"B0843020.sol\":2724:2744  i < proposals.length */\n      lt\n        /* \"B0843020.sol\":2708:2975  for(uint i = 0; i < proposals.length; i++) {\r... */\n      iszero\n      tag_25\n      jumpi\n        /* \"B0843020.sol\":2794:2801  maxVote */\n      dup2\n        /* \"B0843020.sol\":2769:2778  proposals */\n      0x00\n        /* \"B0843020.sol\":2779:2780  i */\n      dup3\n        /* \"B0843020.sol\":2769:2781  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2769:2791  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2769:2801  proposals[i].voteCount > maxVote */\n      gt\n        /* \"B0843020.sol\":2766:2964  if(proposals[i].voteCount > maxVote) {\r... */\n      iszero\n      tag_29\n      jumpi\n        /* \"B0843020.sol\":2832:2841  proposals */\n      0x00\n        /* \"B0843020.sol\":2842:2843  i */\n      dup2\n        /* \"B0843020.sol\":2832:2844  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2832:2854  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2822:2854  maxVote = proposals[i].voteCount */\n      swap2\n      pop\n        /* \"B0843020.sol\":2891:2892  i */\n      dup1\n        /* \"B0843020.sol\":2873:2892  winningProposal = i */\n      swap4\n      pop\n        /* \"B0843020.sol\":2931:2940  proposals */\n      0x00\n        /* \"B0843020.sol\":2941:2942  i */\n      dup2\n        /* \"B0843020.sol\":2931:2943  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2931:2948  proposals[i].name */\n      0x00\n      add\n        /* \"B0843020.sol\":2911:2948  winningProposalName=proposals[i].name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_34\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_35\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_34)\n    tag_35:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_36:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_36\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      pop\n        /* \"B0843020.sol\":2766:2964  if(proposals[i].voteCount > maxVote) {\r... */\n    tag_29:\n        /* \"B0843020.sol\":2746:2749  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"B0843020.sol\":2708:2975  for(uint i = 0; i < proposals.length; i++) {\r... */\n      jump(tag_24)\n    tag_25:\n      pop\n        /* \"B0843020.sol\":2458:2982  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n      pop\n      swap1\n      swap2\n      jump\t// out\n        /* \"B0843020.sol\":1246:1734  function giveRightToVote(address voter) public {\r... */\n    tag_17:\n        /* \"B0843020.sol\":1326:1332  leader */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1312:1332  msg.sender == leader */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1312:1322  msg.sender */\n      caller\n        /* \"B0843020.sol\":1312:1332  msg.sender == leader */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"B0843020.sol\":1304:1333  require(msg.sender == leader) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"B0843020.sol\":1430:1435  false */\n      0x00\n        /* \"B0843020.sol\":1407:1435  voters[voter].voted == false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1407:1413  voters */\n      0x02\n        /* \"B0843020.sol\":1407:1420  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1414:1419  voter */\n      dup4\n        /* \"B0843020.sol\":1407:1420  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1407:1426  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1407:1435  voters[voter].voted == false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1399:1436  require(voters[voter].voted == false) */\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n        /* \"B0843020.sol\":1541:1542  0 */\n      0x00\n        /* \"B0843020.sol\":1517:1523  voters */\n      0x02\n        /* \"B0843020.sol\":1517:1530  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1524:1529  voter */\n      dup4\n        /* \"B0843020.sol\":1517:1530  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1517:1537  voters[voter].weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":1517:1542  voters[voter].weight == 0 */\n      eq\n        /* \"B0843020.sol\":1509:1543  require(voters[voter].weight == 0) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"B0843020.sol\":1668:1669  1 */\n      0x01\n        /* \"B0843020.sol\":1645:1651  voters */\n      0x02\n        /* \"B0843020.sol\":1645:1658  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1652:1657  voter */\n      dup4\n        /* \"B0843020.sol\":1645:1658  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1645:1665  voters[voter].weight */\n      0x00\n      add\n        /* \"B0843020.sol\":1645:1669  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1246:1734  function giveRightToVote(address voter) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820127762e4a7b03dc6955d03803040bb27cd4131a6954f0d1a57e00cae43f991cb64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600060405180604001604052806040518060400160405280600681526020017fe998bfe7b396000000000000000000000000000000000000000000000000000081525081526020016000815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610150929190610205565b5060208201518160010155505050600060405180604001604052806040518060400160405280600981526020017fe58a9be9878fe4baba0000000000000000000000000000000000000000000000815250815260200160008152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906101f2929190610205565b50602082015181600101555050506102aa565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061024657805160ff1916838001178555610274565b82800160010185558215610274579182015b82811115610273578251825591602001919060010190610258565b5b5090506102819190610285565b5090565b6102a791905b808211156102a357600081600090555060010161028b565b5090565b90565b6104ce806102b96000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d61146100fe575b600080fd5b6100726004803603602081101561005c57600080fd5b8101908080359060200190929190505050610142565b005b61007c610212565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100c25780820151818401526020810190506100a7565b50505050905090810190601f1680156100ef5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610345565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff161515146101a757600080fd5b60008160000154116101b857600080fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600083815481106101f057fe5b9060005260206000209060020201600101600082825401925050819055505050565b60006060600080905060008090505b60008054905081101561033f57816000828154811061023c57fe5b9060005260206000209060020201600101541115610332576000818154811061026157fe5b90600052602060002090600202016001015491508093506000818154811061028557fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b505050505092505b8080600101915050610221565b50509091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039f57600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146103ff57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461044e57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a72315820127762e4a7b03dc6955d03803040bb27cd4131a6954f0d1a57e00cae43f991cb64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xE998BFE7B3960000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x150 SWAP3 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xE58A9BE9878FE4BABA0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1F2 SWAP3 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP PUSH2 0x2AA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x246 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x274 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x274 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x273 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x258 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x285 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2A7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x28B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x4CE DUP1 PUSH2 0x2B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x33F JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x261 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x285 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x32A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x221 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SLT PUSH24 0x62E4A7B03DC6955D03803040BB27CD4131A6954F0D1A57E0 0xC 0xAE NUMBER 0xF9 SWAP2 0xCB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:2949:0:-;;;657:450;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:450:0;698:10;689:6;;:19;;;;;;;;;;;;;;;;;;764:1;740:6;:14;747:6;;;;;;;;;;;740:14;;;;;;;;;;;;;;;:21;;:25;;;;889:9;904:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;968:1;904:77;;;889:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;889::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1003:9;1018:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:1;1018:80;;;1003:96;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1003:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36:2949;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d61146100fe575b600080fd5b6100726004803603602081101561005c57600080fd5b8101908080359060200190929190505050610142565b005b61007c610212565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100c25780820151818401526020810190506100a7565b50505050905090810190601f1680156100ef5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610345565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff161515146101a757600080fd5b60008160000154116101b857600080fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600083815481106101f057fe5b9060005260206000209060020201600101600082825401925050819055505050565b60006060600080905060008090505b60008054905081101561033f57816000828154811061023c57fe5b9060005260206000209060020201600101541115610332576000818154811061026157fe5b90600052602060002090600202016001015491508093506000818154811061028557fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b505050505092505b8080600101915050610221565b50509091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039f57600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146103ff57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461044e57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a72315820127762e4a7b03dc6955d03803040bb27cd4131a6954f0d1a57e00cae43f991cb64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x33F JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x261 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x285 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x32A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x221 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 SLT PUSH24 0x62E4A7B03DC6955D03803040BB27CD4131A6954F0D1A57E0 0xC 0xAE NUMBER 0xF9 SWAP2 0xCB PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "36:2949:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36:2949:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1761:670;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1761:670:0;;;;;;;;;;;;;;;;;:::i;:::-;;2458:524;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2458:524:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:488;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1246:488:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1761:670;1808:20;1831:6;:18;1838:10;1831:18;;;;;;;;;;;;;;;1808:41;;1978:5;1963:20;;:6;:12;;;;;;;;;;;;:20;;;1955:29;;;;;;2063:1;2047:6;:13;;;:17;2039:26;;;;;;2159:4;2144:6;:12;;;:19;;;;;;;;;;;;;;;;;;2226:8;2203:6;:20;;:31;;;;2360:6;:13;;;2327:9;2337:8;2327:19;;;;;;;;;;;;;;;;;;:29;;;:46;;;;;;;;;;;1761:670;;:::o;2458:524::-;2510:20;2533:33;2579:12;2594:1;2579:16;;2712:6;2721:1;2712:10;;2708:267;2728:9;:16;;;;2724:1;:20;2708:267;;;2794:7;2769:9;2779:1;2769:12;;;;;;;;;;;;;;;;;;:22;;;:32;2766:198;;;2832:9;2842:1;2832:12;;;;;;;;;;;;;;;;;;:22;;;2822:32;;2891:1;2873:19;;2931:9;2941:1;2931:12;;;;;;;;;;;;;;;;;;:17;;2911:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2766:198;2746:3;;;;;;;2708:267;;;;2458:524;;;:::o;1246:488::-;1326:6;;;;;;;;;;;1312:20;;:10;:20;;;1304:29;;;;;;1430:5;1407:28;;:6;:13;1414:5;1407:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;1399:37;;;;;;1541:1;1517:6;:13;1524:5;1517:13;;;;;;;;;;;;;;;:20;;;:25;1509:34;;;;;;1668:1;1645:6;:13;1652:5;1645:13;;;;;;;;;;;;;;;:20;;:24;;;;1246:488;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "246000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"giveRightToVote(address)": "23122",
								"showWinningProposal()": "infinite",
								"vote(uint256)": "65443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "MSTORE"
								},
								{
									"begin": 657,
									"end": 1107,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 657,
									"end": 1107,
									"name": "POP"
								},
								{
									"begin": 698,
									"end": 708,
									"name": "CALLER"
								},
								{
									"begin": 689,
									"end": 695,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 689,
									"end": 695,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "EXP"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "DUP2"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "SLOAD"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "DUP2"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "MUL"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "NOT"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "AND"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "SWAP1"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "DUP4"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "AND"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "MUL"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "OR"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "SWAP1"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "SSTORE"
								},
								{
									"begin": 689,
									"end": 708,
									"name": "POP"
								},
								{
									"begin": 764,
									"end": 765,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 740,
									"end": 746,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "SWAP1"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "SLOAD"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "SWAP1"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "EXP"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "SWAP1"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "DIV"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 747,
									"end": 753,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "AND"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "MSTORE"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "ADD"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "MSTORE"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "ADD"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 754,
									"name": "KECCAK256"
								},
								{
									"begin": 740,
									"end": 761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 740,
									"end": 761,
									"name": "ADD"
								},
								{
									"begin": 740,
									"end": 765,
									"name": "DUP2"
								},
								{
									"begin": 740,
									"end": 765,
									"name": "SWAP1"
								},
								{
									"begin": 740,
									"end": 765,
									"name": "SSTORE"
								},
								{
									"begin": 740,
									"end": 765,
									"name": "POP"
								},
								{
									"begin": 889,
									"end": 898,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MLOAD"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP1"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "ADD"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MSTORE"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP1"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MLOAD"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP1"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "ADD"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MSTORE"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP1"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP2"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MSTORE"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "ADD"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "E998BFE7B3960000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP2"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MSTORE"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "POP"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP2"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MSTORE"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "ADD"
								},
								{
									"begin": 968,
									"end": 969,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "DUP2"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "MSTORE"
								},
								{
									"begin": 904,
									"end": 981,
									"name": "POP"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "DUP3"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SUB"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "MSTORE"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "KECCAK256"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "MUL"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP2"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP3"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP2"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP2"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "DUP3"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "MLOAD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "DUP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "MLOAD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP3"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP2"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SWAP1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "JUMPDEST"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "DUP3"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "MLOAD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "DUP2"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "ADD"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "SSTORE"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 889,
									"end": 982,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1012,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MLOAD"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP1"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "ADD"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MSTORE"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP1"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MLOAD"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP1"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "ADD"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MSTORE"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP1"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP2"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MSTORE"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "ADD"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "E58A9BE9878FE4BABA0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP2"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MSTORE"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "POP"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP2"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MSTORE"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "ADD"
								},
								{
									"begin": 1085,
									"end": 1086,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "DUP2"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "MSTORE"
								},
								{
									"begin": 1018,
									"end": 1098,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "DUP3"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SUB"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "MSTORE"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "KECCAK256"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "MUL"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "ADD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP2"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP3"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP2"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP2"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "DUP3"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "ADD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "MLOAD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "DUP2"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "ADD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "DUP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "MLOAD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "ADD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP3"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP2"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SWAP1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "JUMPDEST"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "DUP3"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "ADD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "MLOAD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "DUP2"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "ADD"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "SSTORE"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "POP"
								},
								{
									"begin": 1003,
									"end": 1099,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SLOAD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "AND"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "MUL"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SUB"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "AND"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DIV"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "MSTORE"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "KECCAK256"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DIV"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "LT"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "MLOAD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "NOT"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "AND"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP4"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "OR"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP6"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP6"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "GT"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "MLOAD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "GT"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "CODECOPY"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2985,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820127762e4a7b03dc6955d03803040bb27cd4131a6954f0d1a57e00cae43f991cb64736f6c63430005110032",
									".code": [
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "SHR"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "121B93F"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "38351021"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "9E7B8D61"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2985,
											"name": "REVERT"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "DUP1"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "DUP2"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "ADD"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "DUP1"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "DUP1"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "ADD"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "SWAP3"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "SWAP2"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "STOP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "JUMPDEST"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "JUMPDEST"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MLOAD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP4"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MSTORE"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP3"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SUB"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP3"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MSTORE"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP4"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MLOAD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MSTORE"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MLOAD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP4"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "AND"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "ISZERO"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "JUMPI"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP3"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SUB"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MLOAD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP4"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SUB"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "EXP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SUB"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "NOT"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "AND"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MSTORE"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "ADD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "JUMPDEST"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP4"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "MLOAD"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "DUP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SUB"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "RETURN"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "JUMPDEST"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "DUP2"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "ADD"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "AND"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "ADD"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "SWAP3"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "SWAP2"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "SWAP1"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "POP"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "POP"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "POP"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "JUMPDEST"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "STOP"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 1808,
											"end": 1828,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1848,
											"name": "CALLER"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "MSTORE"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "MSTORE"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1849,
											"name": "KECCAK256"
										},
										{
											"begin": 1808,
											"end": 1849,
											"name": "SWAP1"
										},
										{
											"begin": 1808,
											"end": 1849,
											"name": "POP"
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1983,
											"name": "ISZERO"
										},
										{
											"begin": 1963,
											"end": 1983,
											"name": "ISZERO"
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "DUP2"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "ADD"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "SWAP1"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "SLOAD"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "SWAP1"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "EXP"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "SWAP1"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "DIV"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1963,
											"end": 1975,
											"name": "AND"
										},
										{
											"begin": 1963,
											"end": 1983,
											"name": "ISZERO"
										},
										{
											"begin": 1963,
											"end": 1983,
											"name": "ISZERO"
										},
										{
											"begin": 1963,
											"end": 1983,
											"name": "EQ"
										},
										{
											"begin": 1955,
											"end": 1984,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1955,
											"end": 1984,
											"name": "JUMPI"
										},
										{
											"begin": 1955,
											"end": 1984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1984,
											"name": "DUP1"
										},
										{
											"begin": 1955,
											"end": 1984,
											"name": "REVERT"
										},
										{
											"begin": 1955,
											"end": 1984,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1955,
											"end": 1984,
											"name": "JUMPDEST"
										},
										{
											"begin": 2063,
											"end": 2064,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2053,
											"name": "DUP2"
										},
										{
											"begin": 2047,
											"end": 2060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2047,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 2047,
											"end": 2060,
											"name": "SLOAD"
										},
										{
											"begin": 2047,
											"end": 2064,
											"name": "GT"
										},
										{
											"begin": 2039,
											"end": 2065,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2065,
											"name": "JUMPI"
										},
										{
											"begin": 2039,
											"end": 2065,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2065,
											"name": "DUP1"
										},
										{
											"begin": 2039,
											"end": 2065,
											"name": "REVERT"
										},
										{
											"begin": 2039,
											"end": 2065,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2065,
											"name": "JUMPDEST"
										},
										{
											"begin": 2159,
											"end": 2163,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "EXP"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "SLOAD"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "DUP2"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "MUL"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "NOT"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "AND"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "DUP4"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "ISZERO"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "ISZERO"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "MUL"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "OR"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "SWAP1"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "SSTORE"
										},
										{
											"begin": 2144,
											"end": 2163,
											"name": "POP"
										},
										{
											"begin": 2226,
											"end": 2234,
											"name": "DUP2"
										},
										{
											"begin": 2203,
											"end": 2209,
											"name": "DUP2"
										},
										{
											"begin": 2203,
											"end": 2223,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2203,
											"end": 2223,
											"name": "ADD"
										},
										{
											"begin": 2203,
											"end": 2234,
											"name": "DUP2"
										},
										{
											"begin": 2203,
											"end": 2234,
											"name": "SWAP1"
										},
										{
											"begin": 2203,
											"end": 2234,
											"name": "SSTORE"
										},
										{
											"begin": 2203,
											"end": 2234,
											"name": "POP"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP1"
										},
										{
											"begin": 2360,
											"end": 2373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2373,
											"name": "ADD"
										},
										{
											"begin": 2360,
											"end": 2373,
											"name": "SLOAD"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2345,
											"name": "DUP4"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SLOAD"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP2"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "LT"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "JUMPI"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "INVALID"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "JUMPDEST"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SWAP1"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MSTORE"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "KECCAK256"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "SWAP1"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "MUL"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "ADD"
										},
										{
											"begin": 2327,
											"end": 2356,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2327,
											"end": 2356,
											"name": "ADD"
										},
										{
											"begin": 2327,
											"end": 2356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "DUP3"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "DUP3"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "SLOAD"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "ADD"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "SWAP3"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "POP"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "POP"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "DUP2"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "SWAP1"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "SSTORE"
										},
										{
											"begin": 2327,
											"end": 2373,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 1761,
											"end": 2431,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "JUMPDEST"
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2566,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2579,
											"end": 2591,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2595,
											"name": "DUP1"
										},
										{
											"begin": 2579,
											"end": 2595,
											"name": "SWAP1"
										},
										{
											"begin": 2579,
											"end": 2595,
											"name": "POP"
										},
										{
											"begin": 2712,
											"end": 2718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2722,
											"name": "DUP1"
										},
										{
											"begin": 2712,
											"end": 2722,
											"name": "SWAP1"
										},
										{
											"begin": 2712,
											"end": 2722,
											"name": "POP"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2744,
											"name": "DUP1"
										},
										{
											"begin": 2728,
											"end": 2744,
											"name": "SLOAD"
										},
										{
											"begin": 2728,
											"end": 2744,
											"name": "SWAP1"
										},
										{
											"begin": 2728,
											"end": 2744,
											"name": "POP"
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "DUP2"
										},
										{
											"begin": 2724,
											"end": 2744,
											"name": "LT"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "ISZERO"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "JUMPI"
										},
										{
											"begin": 2794,
											"end": 2801,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP3"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "SLOAD"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "DUP2"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "LT"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "JUMPI"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "INVALID"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "JUMPDEST"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "MSTORE"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "KECCAK256"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "SWAP1"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "MUL"
										},
										{
											"begin": 2769,
											"end": 2781,
											"name": "ADD"
										},
										{
											"begin": 2769,
											"end": 2791,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2769,
											"end": 2791,
											"name": "ADD"
										},
										{
											"begin": 2769,
											"end": 2791,
											"name": "SLOAD"
										},
										{
											"begin": 2769,
											"end": 2801,
											"name": "GT"
										},
										{
											"begin": 2766,
											"end": 2964,
											"name": "ISZERO"
										},
										{
											"begin": 2766,
											"end": 2964,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2766,
											"end": 2964,
											"name": "JUMPI"
										},
										{
											"begin": 2832,
											"end": 2841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2843,
											"name": "DUP2"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SLOAD"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "LT"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "JUMPI"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "INVALID"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "MSTORE"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "KECCAK256"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "MUL"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 2854,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2854,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 2854,
											"name": "SLOAD"
										},
										{
											"begin": 2822,
											"end": 2854,
											"name": "SWAP2"
										},
										{
											"begin": 2822,
											"end": 2854,
											"name": "POP"
										},
										{
											"begin": 2891,
											"end": 2892,
											"name": "DUP1"
										},
										{
											"begin": 2873,
											"end": 2892,
											"name": "SWAP4"
										},
										{
											"begin": 2873,
											"end": 2892,
											"name": "POP"
										},
										{
											"begin": 2931,
											"end": 2940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2942,
											"name": "DUP2"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "DUP2"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "SLOAD"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "DUP2"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "LT"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "JUMPI"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "INVALID"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "JUMPDEST"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "SWAP1"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "MSTORE"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "KECCAK256"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "SWAP1"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "MUL"
										},
										{
											"begin": 2931,
											"end": 2943,
											"name": "ADD"
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SLOAD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "AND"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ISZERO"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MUL"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SUB"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "AND"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DIV"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DIV"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MUL"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MLOAD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MSTORE"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP3"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MSTORE"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP3"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SLOAD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "AND"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ISZERO"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MUL"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SUB"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "AND"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DIV"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ISZERO"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "JUMPI"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "LT"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "JUMPI"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP4"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SLOAD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DIV"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MUL"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP4"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MSTORE"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "JUMP"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "JUMPDEST"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP3"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MSTORE"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "KECCAK256"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "JUMPDEST"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SLOAD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "MSTORE"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP4"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "GT"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "JUMPI"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP3"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP1"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SUB"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "AND"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "DUP3"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "ADD"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP2"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "JUMPDEST"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "POP"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "POP"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "POP"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "POP"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "POP"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "SWAP3"
										},
										{
											"begin": 2911,
											"end": 2948,
											"name": "POP"
										},
										{
											"begin": 2766,
											"end": 2964,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2766,
											"end": 2964,
											"name": "JUMPDEST"
										},
										{
											"begin": 2746,
											"end": 2749,
											"name": "DUP1"
										},
										{
											"begin": 2746,
											"end": 2749,
											"name": "DUP1"
										},
										{
											"begin": 2746,
											"end": 2749,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2746,
											"end": 2749,
											"name": "ADD"
										},
										{
											"begin": 2746,
											"end": 2749,
											"name": "SWAP2"
										},
										{
											"begin": 2746,
											"end": 2749,
											"name": "POP"
										},
										{
											"begin": 2746,
											"end": 2749,
											"name": "POP"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "JUMP"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "JUMPDEST"
										},
										{
											"begin": 2708,
											"end": 2975,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "POP"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP1"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "SWAP2"
										},
										{
											"begin": 2458,
											"end": 2982,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "JUMPDEST"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "SWAP1"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "SLOAD"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "SWAP1"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "EXP"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "SWAP1"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DIV"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "AND"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "AND"
										},
										{
											"begin": 1312,
											"end": 1322,
											"name": "CALLER"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "AND"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "EQ"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "JUMPI"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "DUP1"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "REVERT"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "JUMPDEST"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "ISZERO"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "ISZERO"
										},
										{
											"begin": 1407,
											"end": 1413,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1419,
											"name": "DUP4"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "AND"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "AND"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "DUP2"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "MSTORE"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "ADD"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "SWAP1"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "DUP2"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "MSTORE"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "ADD"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1420,
											"name": "KECCAK256"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "ADD"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "SLOAD"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "EXP"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "SWAP1"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "DIV"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1407,
											"end": 1426,
											"name": "AND"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "ISZERO"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "ISZERO"
										},
										{
											"begin": 1407,
											"end": 1435,
											"name": "EQ"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "JUMPI"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "DUP1"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "REVERT"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "JUMPDEST"
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1523,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1529,
											"name": "DUP4"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "AND"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "AND"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1530,
											"name": "KECCAK256"
										},
										{
											"begin": 1517,
											"end": 1537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1537,
											"name": "ADD"
										},
										{
											"begin": 1517,
											"end": 1537,
											"name": "SLOAD"
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "EQ"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "JUMPI"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "DUP1"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "REVERT"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1543,
											"name": "JUMPDEST"
										},
										{
											"begin": 1668,
											"end": 1669,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1645,
											"end": 1651,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1657,
											"name": "DUP4"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "AND"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "AND"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "DUP2"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "MSTORE"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "ADD"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "SWAP1"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "DUP2"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "MSTORE"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "ADD"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1658,
											"name": "KECCAK256"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1665,
											"name": "ADD"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "DUP2"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "SWAP1"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "SSTORE"
										},
										{
											"begin": 1645,
											"end": 1669,
											"name": "POP"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "POP"
										},
										{
											"begin": 1246,
											"end": 1734,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"giveRightToVote(address)": "9e7b8d61",
							"showWinningProposal()": "38351021",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showWinningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"winningProposalName\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B0843020.sol\":\"B0843020\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B0843020.sol\":{\"keccak256\":\"0x0e27418eff9f977bb3e1e8e4012077b4c3624791ad42cab22ec9e750fcafb048\",\"urls\":[\"bzz-raw://ca90ff8493eb96a574445e140113d0a9b1d089c67bf5650bb102fde052ca8c31\",\"dweb:/ipfs/QmeQHbBChYTcXvbsZXfyemcQD975QGPdJcPDWfpE8eAKDD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "B0843020.sol:B0843020",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)6_storage)dyn_storage"
							},
							{
								"astId": 18,
								"contract": "B0843020.sol:B0843020",
								"label": "leader",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "B0843020.sol:B0843020",
								"label": "voters",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Voter)13_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)6_storage)dyn_storage": {
								"base": "t_struct(Proposal)6_storage",
								"encoding": "dynamic_array",
								"label": "struct B0843020.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)13_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct B0843020.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)13_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Proposal)6_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Proposal",
								"members": [
									{
										"astId": 3,
										"contract": "B0843020.sol:B0843020",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 5,
										"contract": "B0843020.sol:B0843020",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)13_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Voter",
								"members": [
									{
										"astId": 8,
										"contract": "B0843020.sol:B0843020",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "B0843020.sol:B0843020",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 12,
										"contract": "B0843020.sol:B0843020",
										"label": "votedProposal",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"B0843020.sol": {
				"ast": {
					"absolutePath": "B0843020.sol",
					"exportedSymbols": {
						"B0843020": [
							193
						]
					},
					"id": 194,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193
							],
							"name": "B0843020",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "B0843020.Proposal",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "95:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "95:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "139:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "139:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "68:119:0",
									"visibility": "public"
								},
								{
									"canonicalName": "B0843020.Voter",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 8,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "224:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "224:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "270:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 9,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "270:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"name": "votedProposal",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "325:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "325:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "200:172:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "385:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
										"typeString": "struct B0843020.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 14,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "385:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$6_storage_ptr",
												"typeString": "struct B0843020.Proposal"
											}
										},
										"id": 15,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "385:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage_ptr",
											"typeString": "struct B0843020.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"name": "leader",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "424:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "424:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "498:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
										"typeString": "mapping(address => struct B0843020.Voter)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "506:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "498:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
											"typeString": "mapping(address => struct B0843020.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 20,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "517:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
												"typeString": "struct B0843020.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "678:429:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "leader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "689:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "698:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "698:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "689:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "689:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "740:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "leader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "747:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "740:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "740:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "764:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "740:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "740:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "e998bfe7b396",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "934:8:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3c03c958503c3b7d9043c5cf90ce5989736a6016f5b4fa3e4a6220d0c3c21bc2",
																		"typeString": "literal_string \"阿糖\""
																	},
																	"value": "阿糖"
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "968:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_3c03c958503c3b7d9043c5cf90ce5989736a6016f5b4fa3e4a6220d0c3c21bc2",
																		"typeString": "literal_string \"阿糖\""
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 40,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "904:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$6_storage_ptr_$",
																	"typeString": "type(struct B0843020.Proposal storage pointer)"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"name",
																"voteCount"
															],
															"nodeType": "FunctionCall",
															"src": "904:77:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "889:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "889:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$6_storage_$returns$_t_uint256_$",
															"typeString": "function (struct B0843020.Proposal storage ref) returns (uint256)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "889:93:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "889:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "e58a9be9878fe4baba",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1048:11:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_704ce6bc9c1b159e7c7703e4b235a4b9cc75b2010c0f6dffc26a05be02c483f6",
																		"typeString": "literal_string \"力量人\""
																	},
																	"value": "力量人"
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1085:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_704ce6bc9c1b159e7c7703e4b235a4b9cc75b2010c0f6dffc26a05be02c483f6",
																		"typeString": "literal_string \"力量人\""
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 49,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "1018:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$6_storage_ptr_$",
																	"typeString": "type(struct B0843020.Proposal storage pointer)"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"name",
																"voteCount"
															],
															"nodeType": "FunctionCall",
															"src": "1018:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 46,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1003:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1003:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$6_storage_$returns$_t_uint256_$",
															"typeString": "function (struct B0843020.Proposal storage ref) returns (uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1003:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "1003:96:0"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "668:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "678:0:0"
									},
									"scope": 193,
									"src": "657:450:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1293:441:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 62,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "1312:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1312:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 64,
																"name": "leader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1326:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1312:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1304:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1304:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1304:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 69,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1407:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 71,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 70,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1414:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1407:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1407:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1430:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1407:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1399:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 78,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1517:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 80,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 79,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1524:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1517:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "1517:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1541:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1517:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1509:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1509:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1645:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 88,
															"indexExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "1652:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1645:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "1645:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1668:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1645:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1645:24:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1271:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1270:15:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:0:0"
									},
									"scope": 193,
									"src": "1246:488:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1797:634:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "1808:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
															"typeString": "struct B0843020.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 99,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 13,
															"src": "1808:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1831:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
															"typeString": "mapping(address => struct B0843020.Voter storage ref)"
														}
													},
													"id": 104,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 102,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1838:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1838:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1831:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$13_storage",
														"typeString": "struct B0843020.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1808:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 107,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1963:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1963:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1978:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1963:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1955:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1955:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 114,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "2047:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "2047:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2063:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2047:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "2039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2039:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2039:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 120,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2144:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2159:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2144:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2144:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 126,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2203:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votedProposal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "2203:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 129,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2226:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2203:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2203:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 132,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2327:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																	"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																}
															},
															"id": 134,
															"indexExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2337:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2327:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_storage",
																"typeString": "struct B0843020.Proposal storage ref"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2327:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 136,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2360:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2360:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2327:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2327:46:0"
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "proposal",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1775:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1775:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1774:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:0:0"
									},
									"scope": 193,
									"src": "1761:670:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2568:414:0",
										"statements": [
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"name": "maxVote",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2579:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2594:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2579:16:0"
											},
											{
												"body": {
													"id": 189,
													"nodeType": "Block",
													"src": "2751:224:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 163,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "2769:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																				"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 165,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 164,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "2779:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2769:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$6_storage",
																			"typeString": "struct B0843020.Proposal storage ref"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "2769:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 167,
																	"name": "maxVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2794:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2769:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 188,
															"nodeType": "IfStatement",
															"src": "2766:198:0",
															"trueBody": {
																"id": 187,
																"nodeType": "Block",
																"src": "2803:161:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 169,
																				"name": "maxVote",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "2822:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 170,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 16,
																						"src": "2832:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																							"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 172,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 171,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 153,
																						"src": "2842:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2832:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$6_storage",
																						"typeString": "struct B0843020.Proposal storage ref"
																					}
																				},
																				"id": 173,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5,
																				"src": "2832:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2822:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 175,
																		"nodeType": "ExpressionStatement",
																		"src": "2822:32:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 176,
																				"name": "winningProposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "2873:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 177,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 153,
																				"src": "2891:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2873:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 179,
																		"nodeType": "ExpressionStatement",
																		"src": "2873:19:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 180,
																				"name": "winningProposalName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "2911:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 181,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 16,
																						"src": "2931:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																							"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 183,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 182,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 153,
																						"src": "2941:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2931:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$6_storage",
																						"typeString": "struct B0843020.Proposal storage ref"
																					}
																				},
																				"id": 184,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "name",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3,
																				"src": "2931:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				}
																			},
																			"src": "2911:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 186,
																		"nodeType": "ExpressionStatement",
																		"src": "2911:37:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2724:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 157,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2728:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2728:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2724:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"initializationExpression": {
													"assignments": [
														153
													],
													"declarations": [
														{
															"constant": false,
															"id": 153,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 190,
															"src": "2712:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 152,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2712:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 155,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2721:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2712:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2746:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 160,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "2746:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 162,
													"nodeType": "ExpressionStatement",
													"src": "2746:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2708:267:0"
											}
										]
									},
									"documentation": null,
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showWinningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2486:2:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2510:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2510:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"name": "winningProposalName",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2533:33:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2533:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2509:58:0"
									},
									"scope": 193,
									"src": "2458:524:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 194,
							"src": "36:2949:0"
						}
					],
					"src": "0:2985:0"
				},
				"id": 0
			}
		}
	}
}