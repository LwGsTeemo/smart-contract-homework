{
	"id": "e0bafe2add668657ad04b5483d26036b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"B0843020.sol": {
				"content": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract B0843020 {\r\n     \r\n    //投票可選的提案數據結構\r\n    struct Proposal {\r\n        bytes32 name;\r\n        uint voteCount;\r\n    }\r\n     \r\n    //投票者的數據結構\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint votedProposal;\r\n    }\r\n     \r\n    Proposal[] proposals; //提案列表\r\n    address chairperson; //發起投票的人(這個投票合約的擁有者)\r\n    mapping(address => Voter) voters; //投票者地址與投票狀態的變數\r\n     \r\n    //合約建構子\r\n    constructor() public {\r\n        chairperson = msg.sender; //發起投票的人=呼叫建構子(創立這個合約)的人\r\n        voters[chairperson].weight = 1; //發起投票的人的投票權重(可以投1票)\r\n        //把傳進的所有提案push進提案列表\r\n        proposals.push(Proposal({\r\n            name: \"阿糖\",\r\n            voteCount: 0\r\n        }));\r\n        proposals.push(Proposal({\r\n            name: \"力量人\",\r\n            voteCount: 0\r\n        }));\r\n    }\r\n     \r\n    //發起投票的人指定誰有權利投票的function\r\n    //預防有人惡意使用多個帳號影響投票公正性\r\n    function giveRightToVote(address voter) public {\r\n        require(msg.sender == chairperson);//確認調用這個function的人是發起投票的人\r\n        require(voters[voter].voted == false);//確認要被授權投票權利的人是還沒有投票的人\r\n        require(voters[voter].weight == 0);//確認要被授權投票權利的人是沒有投票權利的人(投票權重0)\r\n         \r\n        voters[voter].weight = 1;//將要被授權投票權利的人的投票權重設為1\r\n    }\r\n     \r\n    //投票\r\n    function vote(uint proposal) public {\r\n        Voter storage sender = voters[msg.sender];//用storage修飾這個變數讓這個投票者的資訊會被記錄在區塊鏈上\r\n         \r\n        require(sender.voted ==false);//確認投票者是還沒有投過票的人\r\n        require(sender.weight > 0);//確認投票者是有權利投票的人(投票權重>0)\r\n         \r\n        sender.voted = true;//將投票者設為已投票\r\n        sender.votedProposal = proposal;//將投票者投的提案記錄在會被備份在區塊鏈的變數上\r\n         \r\n        proposals[proposal].voteCount += sender.weight;//將提該案的人數加上投票者投的權重\r\n    }\r\n     \r\n    //開票\r\n    function showWinningProposal() public view returns (uint winningProposal) {\r\n        uint maxVote = 0; //將目前最多的得票數設為0\r\n         \r\n        //迴圈找出所有提案得票數最多的\r\n        for(uint i = 0; i < proposals.length; i++) {\r\n            if(proposals[i].voteCount > maxVote) {\r\n                maxVote = proposals[i].voteCount;\r\n                winningProposal = i;\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"B0843020.sol": {
				"B0843020": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showWinningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"B0843020.sol\":36:2840  contract B0843020 {\r... */\n  mstore(0x40, 0x80)\n    /* \"B0843020.sol\":564:1049  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"B0843020.sol\":564:1049  constructor() public {\r... */\n  pop\n    /* \"B0843020.sol\":610:620  msg.sender */\n  caller\n    /* \"B0843020.sol\":596:607  chairperson */\n  0x01\n  0x00\n    /* \"B0843020.sol\":596:620  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":723:724  1 */\n  0x01\n    /* \"B0843020.sol\":694:700  voters */\n  0x02\n    /* \"B0843020.sol\":694:713  voters[chairperson] */\n  0x00\n    /* \"B0843020.sol\":701:712  chairperson */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B0843020.sol\":694:713  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"B0843020.sol\":694:720  voters[chairperson].weight */\n  0x00\n  add\n    /* \"B0843020.sol\":694:724  voters[chairperson].weight = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":841:850  proposals */\n  0x00\n    /* \"B0843020.sol\":856:933  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0xe998bfe7b3960000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  add\n    /* \"B0843020.sol\":920:921  0 */\n  0x00\n    /* \"B0843020.sol\":856:933  Proposal({\r... */\n  dup2\n  mstore\n  pop\n    /* \"B0843020.sol\":841:934  proposals.push(Proposal({\r... */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"B0843020.sol\":841:934  proposals.push(Proposal({\r... */\n  swap1\n  0x01\n  dup3\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":945:954  proposals */\n  0x00\n    /* \"B0843020.sol\":960:1040  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0xe58a9be9878fe4baba0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x20\n  add\n    /* \"B0843020.sol\":1027:1028  0 */\n  0x00\n    /* \"B0843020.sol\":960:1040  Proposal({\r... */\n  dup2\n  mstore\n  pop\n    /* \"B0843020.sol\":945:1041  proposals.push(Proposal({\r... */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"B0843020.sol\":945:1041  proposals.push(Proposal({\r... */\n  swap1\n  0x01\n  dup3\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":36:2840  contract B0843020 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B0843020.sol\":36:2840  contract B0843020 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"B0843020.sol\":36:2840  contract B0843020 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38351021\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"B0843020.sol\":1708:2378  function vote(uint proposal) public {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"B0843020.sol\":1708:2378  function vote(uint proposal) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"B0843020.sol\":2405:2837  function showWinningProposal() public view returns (uint winningProposal) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B0843020.sol\":1188:1681  function giveRightToVote(address voter) public {\r... */\n    tag_5:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_12:\n        /* \"B0843020.sol\":1188:1681  function giveRightToVote(address voter) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      stop\n        /* \"B0843020.sol\":1708:2378  function vote(uint proposal) public {\r... */\n    tag_8:\n        /* \"B0843020.sol\":1755:1775  Voter storage sender */\n      0x00\n        /* \"B0843020.sol\":1778:1784  voters */\n      0x02\n        /* \"B0843020.sol\":1778:1796  voters[msg.sender] */\n      0x00\n        /* \"B0843020.sol\":1785:1795  msg.sender */\n      caller\n        /* \"B0843020.sol\":1778:1796  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1755:1796  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"B0843020.sol\":1925:1930  false */\n      0x00\n        /* \"B0843020.sol\":1910:1930  sender.voted ==false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1910:1916  sender */\n      dup2\n        /* \"B0843020.sol\":1910:1922  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1910:1930  sender.voted ==false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1902:1931  require(sender.voted ==false) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"B0843020.sol\":2010:2011  0 */\n      0x00\n        /* \"B0843020.sol\":1994:2000  sender */\n      dup2\n        /* \"B0843020.sol\":1994:2007  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":1994:2011  sender.weight > 0 */\n      gt\n        /* \"B0843020.sol\":1986:2012  require(sender.weight > 0) */\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n        /* \"B0843020.sol\":2106:2110  true */\n      0x01\n        /* \"B0843020.sol\":2091:2097  sender */\n      dup2\n        /* \"B0843020.sol\":2091:2103  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2091:2110  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2173:2181  proposal */\n      dup2\n        /* \"B0843020.sol\":2150:2156  sender */\n      dup2\n        /* \"B0843020.sol\":2150:2170  sender.votedProposal */\n      0x02\n      add\n        /* \"B0843020.sol\":2150:2181  sender.votedProposal = proposal */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2307:2313  sender */\n      dup1\n        /* \"B0843020.sol\":2307:2320  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":2274:2283  proposals */\n      0x00\n        /* \"B0843020.sol\":2284:2292  proposal */\n      dup4\n        /* \"B0843020.sol\":2274:2293  proposals[proposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2274:2303  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2274:2320  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1708:2378  function vote(uint proposal) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"B0843020.sol\":2405:2837  function showWinningProposal() public view returns (uint winningProposal) {\r... */\n    tag_10:\n        /* \"B0843020.sol\":2457:2477  uint winningProposal */\n      0x00\n        /* \"B0843020.sol\":2490:2502  uint maxVote */\n      dup1\n        /* \"B0843020.sol\":2505:2506  0 */\n      0x00\n        /* \"B0843020.sol\":2490:2506  uint maxVote = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2623:2629  uint i */\n      0x00\n        /* \"B0843020.sol\":2632:2633  0 */\n      dup1\n        /* \"B0843020.sol\":2623:2633  uint i = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2619:2830  for(uint i = 0; i < proposals.length; i++) {\r... */\n    tag_20:\n        /* \"B0843020.sol\":2639:2648  proposals */\n      0x00\n        /* \"B0843020.sol\":2639:2655  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"B0843020.sol\":2635:2636  i */\n      dup2\n        /* \"B0843020.sol\":2635:2655  i < proposals.length */\n      lt\n        /* \"B0843020.sol\":2619:2830  for(uint i = 0; i < proposals.length; i++) {\r... */\n      iszero\n      tag_21\n      jumpi\n        /* \"B0843020.sol\":2705:2712  maxVote */\n      dup2\n        /* \"B0843020.sol\":2680:2689  proposals */\n      0x00\n        /* \"B0843020.sol\":2690:2691  i */\n      dup3\n        /* \"B0843020.sol\":2680:2692  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2680:2702  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2680:2712  proposals[i].voteCount > maxVote */\n      gt\n        /* \"B0843020.sol\":2677:2819  if(proposals[i].voteCount > maxVote) {\r... */\n      iszero\n      tag_25\n      jumpi\n        /* \"B0843020.sol\":2743:2752  proposals */\n      0x00\n        /* \"B0843020.sol\":2753:2754  i */\n      dup2\n        /* \"B0843020.sol\":2743:2755  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2743:2765  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2733:2765  maxVote = proposals[i].voteCount */\n      swap2\n      pop\n        /* \"B0843020.sol\":2802:2803  i */\n      dup1\n        /* \"B0843020.sol\":2784:2803  winningProposal = i */\n      swap3\n      pop\n        /* \"B0843020.sol\":2677:2819  if(proposals[i].voteCount > maxVote) {\r... */\n    tag_25:\n        /* \"B0843020.sol\":2657:2660  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"B0843020.sol\":2619:2830  for(uint i = 0; i < proposals.length; i++) {\r... */\n      jump(tag_20)\n    tag_21:\n      pop\n        /* \"B0843020.sol\":2405:2837  function showWinningProposal() public view returns (uint winningProposal) {\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"B0843020.sol\":1188:1681  function giveRightToVote(address voter) public {\r... */\n    tag_13:\n        /* \"B0843020.sol\":1268:1279  chairperson */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1254:1279  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1254:1264  msg.sender */\n      caller\n        /* \"B0843020.sol\":1254:1279  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"B0843020.sol\":1246:1280  require(msg.sender == chairperson) */\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n        /* \"B0843020.sol\":1377:1382  false */\n      0x00\n        /* \"B0843020.sol\":1354:1382  voters[voter].voted == false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1354:1360  voters */\n      0x02\n        /* \"B0843020.sol\":1354:1367  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1361:1366  voter */\n      dup4\n        /* \"B0843020.sol\":1354:1367  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1354:1373  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1354:1382  voters[voter].voted == false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1346:1383  require(voters[voter].voted == false) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"B0843020.sol\":1488:1489  0 */\n      0x00\n        /* \"B0843020.sol\":1464:1470  voters */\n      0x02\n        /* \"B0843020.sol\":1464:1477  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1471:1476  voter */\n      dup4\n        /* \"B0843020.sol\":1464:1477  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1464:1484  voters[voter].weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":1464:1489  voters[voter].weight == 0 */\n      eq\n        /* \"B0843020.sol\":1456:1490  require(voters[voter].weight == 0) */\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n        /* \"B0843020.sol\":1615:1616  1 */\n      0x01\n        /* \"B0843020.sol\":1592:1598  voters */\n      0x02\n        /* \"B0843020.sol\":1592:1605  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1599:1604  voter */\n      dup4\n        /* \"B0843020.sol\":1592:1605  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1592:1612  voters[voter].weight */\n      0x00\n      add\n        /* \"B0843020.sol\":1592:1616  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1188:1681  function giveRightToVote(address voter) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820699dd82a76a492a4eff6242899af28363aadd6e0fc751dbe1cfaa8ff30a6577f64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600060405180604001604052807fe998bfe7b396000000000000000000000000000000000000000000000000000081526020016000815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000015560208201518160010155505050600060405180604001604052807fe58a9be9878fe4baba0000000000000000000000000000000000000000000000815260200160008152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000155602082015181600101555050506103a6806101bf6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d6114610092575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100d6565b005b61007c6101a6565b6040518082815260200191505060405180910390f35b6100d4600480360360208110156100a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021d565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff1615151461013b57600080fd5b600081600001541161014c57600080fd5b60018160010160006101000a81548160ff02191690831515021790555081816002018190555080600001546000838154811061018457fe5b9060005260206000209060020201600101600082825401925050819055505050565b6000806000905060008090505b6000805490508110156102185781600082815481106101ce57fe5b906000526020600020906002020160010154111561020b57600081815481106101f357fe5b90600052602060002090600202016001015491508092505b80806001019150506101b3565b505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027757600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146102d757600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461032657600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a72315820699dd82a76a492a4eff6242899af28363aadd6e0fc751dbe1cfaa8ff30a6577f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xE998BFE7B3960000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xE58A9BE9878FE4BABA0000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP PUSH2 0x3A6 DUP1 PUSH2 0x1BF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x184 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x218 JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1B3 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH10 0x9DD82A76A492A4EFF624 0x28 SWAP10 0xAF 0x28 CALLDATASIZE GASPRICE 0xAD 0xD6 0xE0 0xFC PUSH22 0x1DBE1CFAA8FF30A6577F64736F6C6343000511003200 ",
							"sourceMap": "36:2804:0:-;;;564:485;8:9:-1;5:2;;;30:1;27;20:12;5:2;564:485:0;610:10;596:11;;:24;;;;;;;;;;;;;;;;;;723:1;694:6;:19;701:11;;;;;;;;;;;694:19;;;;;;;;;;;;;;;:26;;:30;;;;841:9;856:77;;;;;;;;;;;;;920:1;856:77;;;841:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;841::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:9;960:80;;;;;;;;;;;;;1027:1;960:80;;;945:96;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;945:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;36:2804;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d6114610092575b600080fd5b6100726004803603602081101561005c57600080fd5b81019080803590602001909291905050506100d6565b005b61007c6101a6565b6040518082815260200191505060405180910390f35b6100d4600480360360208110156100a857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061021d565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff1615151461013b57600080fd5b600081600001541161014c57600080fd5b60018160010160006101000a81548160ff02191690831515021790555081816002018190555080600001546000838154811061018457fe5b9060005260206000209060020201600101600082825401925050819055505050565b6000806000905060008090505b6000805490508110156102185781600082815481106101ce57fe5b906000526020600020906002020160010154111561020b57600081815481106101f357fe5b90600052602060002090600202016001015491508092505b80806001019150506101b3565b505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027757600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146102d757600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461032657600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a72315820699dd82a76a492a4eff6242899af28363aadd6e0fc751dbe1cfaa8ff30a6577f64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x184 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x218 JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1CE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x20B JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1F3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1B3 JUMP JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH10 0x9DD82A76A492A4EFF624 0x28 SWAP10 0xAF 0x28 CALLDATASIZE GASPRICE 0xAD 0xD6 0xE0 0xFC PUSH22 0x1DBE1CFAA8FF30A6577F64736F6C6343000511003200 ",
							"sourceMap": "36:2804:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36:2804:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:670;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1708:670:0;;;;;;;;;;;;;;;;;:::i;:::-;;2405:432;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1188:493;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1188:493:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1708:670;1755:20;1778:6;:18;1785:10;1778:18;;;;;;;;;;;;;;;1755:41;;1925:5;1910:20;;:6;:12;;;;;;;;;;;;:20;;;1902:29;;;;;;2010:1;1994:6;:13;;;:17;1986:26;;;;;;2106:4;2091:6;:12;;;:19;;;;;;;;;;;;;;;;;;2173:8;2150:6;:20;;:31;;;;2307:6;:13;;;2274:9;2284:8;2274:19;;;;;;;;;;;;;;;;;;:29;;;:46;;;;;;;;;;;1708:670;;:::o;2405:432::-;2457:20;2490:12;2505:1;2490:16;;2623:6;2632:1;2623:10;;2619:211;2639:9;:16;;;;2635:1;:20;2619:211;;;2705:7;2680:9;2690:1;2680:12;;;;;;;;;;;;;;;;;;:22;;;:32;2677:142;;;2743:9;2753:1;2743:12;;;;;;;;;;;;;;;;;;:22;;;2733:32;;2802:1;2784:19;;2677:142;2657:3;;;;;;;2619:211;;;;2405:432;;:::o;1188:493::-;1268:11;;;;;;;;;;;1254:25;;:10;:25;;;1246:34;;;;;;1377:5;1354:28;;:6;:13;1361:5;1354:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;1346:37;;;;;;1488:1;1464:6;:13;1471:5;1464:13;;;;;;;;;;;;;;;:20;;;:25;1456:34;;;;;;1615:1;1592:6;:13;1599:5;1592:13;;;;;;;;;;;;;;;:20;;:24;;;;1188:493;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "186800",
								"executionCost": "134114",
								"totalCost": "320914"
							},
							"external": {
								"giveRightToVote(address)": "23122",
								"showWinningProposal()": "infinite",
								"vote(uint256)": "65443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 2840,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "MSTORE"
								},
								{
									"begin": 564,
									"end": 1049,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 564,
									"end": 1049,
									"name": "POP"
								},
								{
									"begin": 610,
									"end": 620,
									"name": "CALLER"
								},
								{
									"begin": 596,
									"end": 607,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 596,
									"end": 607,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "EXP"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "DUP2"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "SLOAD"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "DUP2"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "MUL"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "NOT"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "AND"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "SWAP1"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "DUP4"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "AND"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "MUL"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "OR"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "SWAP1"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "SSTORE"
								},
								{
									"begin": 596,
									"end": 620,
									"name": "POP"
								},
								{
									"begin": 723,
									"end": 724,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 694,
									"end": 700,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "SWAP1"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "SLOAD"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "SWAP1"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "EXP"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "SWAP1"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "DIV"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 701,
									"end": 712,
									"name": "AND"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "AND"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "AND"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "MSTORE"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "SWAP1"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "DUP2"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "MSTORE"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "ADD"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 694,
									"end": 713,
									"name": "KECCAK256"
								},
								{
									"begin": 694,
									"end": 720,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 694,
									"end": 720,
									"name": "ADD"
								},
								{
									"begin": 694,
									"end": 724,
									"name": "DUP2"
								},
								{
									"begin": 694,
									"end": 724,
									"name": "SWAP1"
								},
								{
									"begin": 694,
									"end": 724,
									"name": "SSTORE"
								},
								{
									"begin": 694,
									"end": 724,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 850,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "MLOAD"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "DUP1"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "MSTORE"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "DUP1"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "PUSH",
									"value": "E998BFE7B3960000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "DUP2"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "MSTORE"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 920,
									"end": 921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "DUP2"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "MSTORE"
								},
								{
									"begin": 856,
									"end": 933,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "DUP3"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SUB"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "MSTORE"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "KECCAK256"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "MUL"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP2"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP3"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP2"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SWAP2"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "DUP3"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "MLOAD"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "DUP2"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SSTORE"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "DUP3"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "MLOAD"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "DUP2"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "ADD"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "SSTORE"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "POP"
								},
								{
									"begin": 841,
									"end": 934,
									"name": "POP"
								},
								{
									"begin": 945,
									"end": 954,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "MLOAD"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "DUP1"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "MSTORE"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "DUP1"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "PUSH",
									"value": "E58A9BE9878FE4BABA0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "DUP2"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "MSTORE"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 1027,
									"end": 1028,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "DUP2"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "MSTORE"
								},
								{
									"begin": 960,
									"end": 1040,
									"name": "POP"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "DUP3"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SUB"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "MSTORE"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "KECCAK256"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "MUL"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "ADD"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP2"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP3"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP2"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SWAP2"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "POP"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "DUP3"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "ADD"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "MLOAD"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "DUP2"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "ADD"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SSTORE"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "DUP3"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "ADD"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "MLOAD"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "DUP2"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "ADD"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "SSTORE"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "POP"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "POP"
								},
								{
									"begin": 945,
									"end": 1041,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "CODECOPY"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2840,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820699dd82a76a492a4eff6242899af28363aadd6e0fc751dbe1cfaa8ff30a6577f64736f6c63430005110032",
									".code": [
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "SHR"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "121B93F"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "38351021"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "9E7B8D61"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2840,
											"name": "REVERT"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "DUP2"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "DUP1"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "ADD"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "SWAP3"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "SWAP2"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "SWAP1"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "STOP"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "JUMPDEST"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "JUMPDEST"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "MLOAD"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "DUP1"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "DUP3"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "DUP2"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "MSTORE"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "ADD"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "SWAP2"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "POP"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "POP"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "MLOAD"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "DUP1"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "SWAP2"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "SUB"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "SWAP1"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "RETURN"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "DUP2"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "DUP1"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "AND"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "ADD"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "SWAP3"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "SWAP2"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "SWAP1"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "STOP"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "JUMPDEST"
										},
										{
											"begin": 1755,
											"end": 1775,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1795,
											"name": "CALLER"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "AND"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "AND"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "DUP2"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "MSTORE"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "ADD"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "SWAP1"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "DUP2"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "MSTORE"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "ADD"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "KECCAK256"
										},
										{
											"begin": 1755,
											"end": 1796,
											"name": "SWAP1"
										},
										{
											"begin": 1755,
											"end": 1796,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1930,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1930,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "ADD"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "SLOAD"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "EXP"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "SWAP1"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "DIV"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1910,
											"end": 1922,
											"name": "AND"
										},
										{
											"begin": 1910,
											"end": 1930,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1930,
											"name": "ISZERO"
										},
										{
											"begin": 1910,
											"end": 1930,
											"name": "EQ"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "JUMPI"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "DUP1"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "REVERT"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1902,
											"end": 1931,
											"name": "JUMPDEST"
										},
										{
											"begin": 2010,
											"end": 2011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2000,
											"name": "DUP2"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "ADD"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "SLOAD"
										},
										{
											"begin": 1994,
											"end": 2011,
											"name": "GT"
										},
										{
											"begin": 1986,
											"end": 2012,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1986,
											"end": 2012,
											"name": "JUMPI"
										},
										{
											"begin": 1986,
											"end": 2012,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 2012,
											"name": "DUP1"
										},
										{
											"begin": 1986,
											"end": 2012,
											"name": "REVERT"
										},
										{
											"begin": 1986,
											"end": 2012,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1986,
											"end": 2012,
											"name": "JUMPDEST"
										},
										{
											"begin": 2106,
											"end": 2110,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "ADD"
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "EXP"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SLOAD"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "DUP2"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "MUL"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "NOT"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "AND"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "DUP4"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "ISZERO"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "ISZERO"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "MUL"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "OR"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SWAP1"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "SSTORE"
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "POP"
										},
										{
											"begin": 2173,
											"end": 2181,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2150,
											"end": 2170,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2181,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2181,
											"name": "SWAP1"
										},
										{
											"begin": 2150,
											"end": 2181,
											"name": "SSTORE"
										},
										{
											"begin": 2150,
											"end": 2181,
											"name": "POP"
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "DUP1"
										},
										{
											"begin": 2307,
											"end": 2320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2307,
											"end": 2320,
											"name": "SLOAD"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2292,
											"name": "DUP4"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "DUP2"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "SLOAD"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "DUP2"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "LT"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "JUMPI"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "INVALID"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "JUMPDEST"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "SWAP1"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "MSTORE"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "KECCAK256"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "SWAP1"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "MUL"
										},
										{
											"begin": 2274,
											"end": 2293,
											"name": "ADD"
										},
										{
											"begin": 2274,
											"end": 2303,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2274,
											"end": 2303,
											"name": "ADD"
										},
										{
											"begin": 2274,
											"end": 2303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "DUP3"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "DUP3"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "SLOAD"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "SWAP3"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "POP"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "POP"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "SWAP1"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "SSTORE"
										},
										{
											"begin": 2274,
											"end": 2320,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "POP"
										},
										{
											"begin": 1708,
											"end": 2378,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "JUMPDEST"
										},
										{
											"begin": 2457,
											"end": 2477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2502,
											"name": "DUP1"
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "SWAP1"
										},
										{
											"begin": 2490,
											"end": 2506,
											"name": "POP"
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "DUP1"
										},
										{
											"begin": 2623,
											"end": 2633,
											"name": "SWAP1"
										},
										{
											"begin": 2623,
											"end": 2633,
											"name": "POP"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2639,
											"end": 2648,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2639,
											"end": 2655,
											"name": "DUP1"
										},
										{
											"begin": 2639,
											"end": 2655,
											"name": "SLOAD"
										},
										{
											"begin": 2639,
											"end": 2655,
											"name": "SWAP1"
										},
										{
											"begin": 2639,
											"end": 2655,
											"name": "POP"
										},
										{
											"begin": 2635,
											"end": 2636,
											"name": "DUP2"
										},
										{
											"begin": 2635,
											"end": 2655,
											"name": "LT"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "ISZERO"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "JUMPI"
										},
										{
											"begin": 2705,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2680,
											"end": 2689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "DUP3"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "DUP2"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "SLOAD"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "DUP2"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "LT"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "JUMPI"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "INVALID"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "JUMPDEST"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "SWAP1"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "MSTORE"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "KECCAK256"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "SWAP1"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "MUL"
										},
										{
											"begin": 2680,
											"end": 2692,
											"name": "ADD"
										},
										{
											"begin": 2680,
											"end": 2702,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2680,
											"end": 2702,
											"name": "ADD"
										},
										{
											"begin": 2680,
											"end": 2702,
											"name": "SLOAD"
										},
										{
											"begin": 2680,
											"end": 2712,
											"name": "GT"
										},
										{
											"begin": 2677,
											"end": 2819,
											"name": "ISZERO"
										},
										{
											"begin": 2677,
											"end": 2819,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2677,
											"end": 2819,
											"name": "JUMPI"
										},
										{
											"begin": 2743,
											"end": 2752,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "DUP2"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "DUP2"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "SLOAD"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "DUP2"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "LT"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "JUMPI"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "INVALID"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "JUMPDEST"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "SWAP1"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "MSTORE"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "KECCAK256"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "SWAP1"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "MUL"
										},
										{
											"begin": 2743,
											"end": 2755,
											"name": "ADD"
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "ADD"
										},
										{
											"begin": 2743,
											"end": 2765,
											"name": "SLOAD"
										},
										{
											"begin": 2733,
											"end": 2765,
											"name": "SWAP2"
										},
										{
											"begin": 2733,
											"end": 2765,
											"name": "POP"
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP1"
										},
										{
											"begin": 2784,
											"end": 2803,
											"name": "SWAP3"
										},
										{
											"begin": 2784,
											"end": 2803,
											"name": "POP"
										},
										{
											"begin": 2677,
											"end": 2819,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2677,
											"end": 2819,
											"name": "JUMPDEST"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "DUP1"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "DUP1"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "ADD"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "SWAP2"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "POP"
										},
										{
											"begin": 2657,
											"end": 2660,
											"name": "POP"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "JUMP"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "JUMPDEST"
										},
										{
											"begin": 2619,
											"end": 2830,
											"name": "POP"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "POP"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "SWAP1"
										},
										{
											"begin": 2405,
											"end": 2837,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "JUMPDEST"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "SLOAD"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "EXP"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "SWAP1"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "DIV"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1268,
											"end": 1279,
											"name": "AND"
										},
										{
											"begin": 1254,
											"end": 1279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1279,
											"name": "AND"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "CALLER"
										},
										{
											"begin": 1254,
											"end": 1279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1254,
											"end": 1279,
											"name": "AND"
										},
										{
											"begin": 1254,
											"end": 1279,
											"name": "EQ"
										},
										{
											"begin": 1246,
											"end": 1280,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1246,
											"end": 1280,
											"name": "JUMPI"
										},
										{
											"begin": 1246,
											"end": 1280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1280,
											"name": "DUP1"
										},
										{
											"begin": 1246,
											"end": 1280,
											"name": "REVERT"
										},
										{
											"begin": 1246,
											"end": 1280,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1246,
											"end": 1280,
											"name": "JUMPDEST"
										},
										{
											"begin": 1377,
											"end": 1382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "ISZERO"
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "ISZERO"
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "DUP4"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "DUP2"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "MSTORE"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "ADD"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1367,
											"name": "KECCAK256"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "ADD"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "SLOAD"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "EXP"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "SWAP1"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "DIV"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1354,
											"end": 1373,
											"name": "AND"
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "ISZERO"
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "ISZERO"
										},
										{
											"begin": 1354,
											"end": 1382,
											"name": "EQ"
										},
										{
											"begin": 1346,
											"end": 1383,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1346,
											"end": 1383,
											"name": "JUMPI"
										},
										{
											"begin": 1346,
											"end": 1383,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1346,
											"end": 1383,
											"name": "REVERT"
										},
										{
											"begin": 1346,
											"end": 1383,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1346,
											"end": 1383,
											"name": "JUMPDEST"
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1470,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1471,
											"end": 1476,
											"name": "DUP4"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "AND"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "DUP2"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "MSTORE"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "ADD"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "SWAP1"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "DUP2"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "MSTORE"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "ADD"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1477,
											"name": "KECCAK256"
										},
										{
											"begin": 1464,
											"end": 1484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1484,
											"name": "ADD"
										},
										{
											"begin": 1464,
											"end": 1484,
											"name": "SLOAD"
										},
										{
											"begin": 1464,
											"end": 1489,
											"name": "EQ"
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "JUMPI"
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "DUP1"
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "REVERT"
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1456,
											"end": 1490,
											"name": "JUMPDEST"
										},
										{
											"begin": 1615,
											"end": 1616,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1592,
											"end": 1598,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1604,
											"name": "DUP4"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "AND"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "MSTORE"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "SWAP1"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "DUP2"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "MSTORE"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1605,
											"name": "KECCAK256"
										},
										{
											"begin": 1592,
											"end": 1612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1612,
											"name": "ADD"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "DUP2"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "SWAP1"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "SSTORE"
										},
										{
											"begin": 1592,
											"end": 1616,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "POP"
										},
										{
											"begin": 1188,
											"end": 1681,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"giveRightToVote(address)": "9e7b8d61",
							"showWinningProposal()": "38351021",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showWinningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B0843020.sol\":\"B0843020\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B0843020.sol\":{\"keccak256\":\"0x0b8f52d9520acd0ab7d8bbae94a7bd4456fdcf9140b783233369a4fb06bde7bd\",\"urls\":[\"bzz-raw://5abd7a5db3d362ef7cd7664640a2dabd9f9d555ef2bd3c6d5cbecd0f6a2ce112\",\"dweb:/ipfs/QmRHBnTW7vfneoyL6faUBE2T8x2L3QGemrjFoWB8DhuvPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "B0843020.sol:B0843020",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)6_storage)dyn_storage"
							},
							{
								"astId": 18,
								"contract": "B0843020.sol:B0843020",
								"label": "chairperson",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "B0843020.sol:B0843020",
								"label": "voters",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Voter)13_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)6_storage)dyn_storage": {
								"base": "t_struct(Proposal)6_storage",
								"encoding": "dynamic_array",
								"label": "struct B0843020.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(Voter)13_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct B0843020.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)13_storage"
							},
							"t_struct(Proposal)6_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Proposal",
								"members": [
									{
										"astId": 3,
										"contract": "B0843020.sol:B0843020",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 5,
										"contract": "B0843020.sol:B0843020",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)13_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Voter",
								"members": [
									{
										"astId": 8,
										"contract": "B0843020.sol:B0843020",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "B0843020.sol:B0843020",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 12,
										"contract": "B0843020.sol:B0843020",
										"label": "votedProposal",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"B0843020.sol": {
				"ast": {
					"absolutePath": "B0843020.sol",
					"exportedSymbols": {
						"B0843020": [
							184
						]
					},
					"id": 185,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "B0843020",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "B0843020.Proposal",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "136:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "136:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "159:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "159:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "109:72:0",
									"visibility": "public"
								},
								{
									"canonicalName": "B0843020.Voter",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 8,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "250:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "250:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "272:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 9,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "272:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"name": "votedProposal",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "293:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "293:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "226:93:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "332:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
										"typeString": "struct B0843020.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 14,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "332:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$6_storage_ptr",
												"typeString": "struct B0843020.Proposal"
											}
										},
										"id": 15,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "332:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage_ptr",
											"typeString": "struct B0843020.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "374:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "374:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "453:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
										"typeString": "mapping(address => struct B0843020.Voter)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "461:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "453:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
											"typeString": "mapping(address => struct B0843020.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 20,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "472:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
												"typeString": "struct B0843020.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "585:464:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "596:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "610:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "610:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "596:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "596:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "694:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "701:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "694:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "694:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "723:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "694:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "694:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "e998bfe7b396",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "886:8:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3c03c958503c3b7d9043c5cf90ce5989736a6016f5b4fa3e4a6220d0c3c21bc2",
																		"typeString": "literal_string \"阿糖\""
																	},
																	"value": "阿糖"
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "920:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_3c03c958503c3b7d9043c5cf90ce5989736a6016f5b4fa3e4a6220d0c3c21bc2",
																		"typeString": "literal_string \"阿糖\""
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 40,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "856:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$6_storage_ptr_$",
																	"typeString": "type(struct B0843020.Proposal storage pointer)"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"name",
																"voteCount"
															],
															"nodeType": "FunctionCall",
															"src": "856:77:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "841:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "841:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$6_storage_$returns$_t_uint256_$",
															"typeString": "function (struct B0843020.Proposal storage ref) returns (uint256)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "841:93:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "841:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "e58a9be9878fe4baba",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "990:11:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_704ce6bc9c1b159e7c7703e4b235a4b9cc75b2010c0f6dffc26a05be02c483f6",
																		"typeString": "literal_string \"力量人\""
																	},
																	"value": "力量人"
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1027:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_704ce6bc9c1b159e7c7703e4b235a4b9cc75b2010c0f6dffc26a05be02c483f6",
																		"typeString": "literal_string \"力量人\""
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 49,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "960:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$6_storage_ptr_$",
																	"typeString": "type(struct B0843020.Proposal storage pointer)"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"name",
																"voteCount"
															],
															"nodeType": "FunctionCall",
															"src": "960:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 46,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "945:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "945:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$6_storage_$returns$_t_uint256_$",
															"typeString": "function (struct B0843020.Proposal storage ref) returns (uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "945:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "945:96:0"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "585:0:0"
									},
									"scope": 184,
									"src": "564:485:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1235:446:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 62,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1254:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1254:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 64,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1268:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1254:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															203
														],
														"referencedDeclaration": 202,
														"src": "1246:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1246:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1246:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 69,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1354:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 71,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 70,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1361:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1354:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1354:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1377:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1354:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															203
														],
														"referencedDeclaration": 202,
														"src": "1346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1346:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1346:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 78,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1464:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 80,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 79,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1471:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1464:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "1464:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1488:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1464:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															203
														],
														"referencedDeclaration": 202,
														"src": "1456:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1456:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1456:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1592:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 88,
															"indexExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "1599:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1592:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "1592:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1615:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1592:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1592:24:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1213:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1212:15:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:0:0"
									},
									"scope": 184,
									"src": "1188:493:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1744:634:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "1755:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
															"typeString": "struct B0843020.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 99,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 13,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1778:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
															"typeString": "mapping(address => struct B0843020.Voter storage ref)"
														}
													},
													"id": 104,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 102,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1785:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1785:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1778:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$13_storage",
														"typeString": "struct B0843020.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1755:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 107,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1910:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1910:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1925:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1910:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															203
														],
														"referencedDeclaration": 202,
														"src": "1902:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1902:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1902:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 114,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1994:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "1994:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2010:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1994:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															203
														],
														"referencedDeclaration": 202,
														"src": "1986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1986:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1986:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 120,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2091:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2091:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2106:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2091:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2091:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 126,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2150:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votedProposal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "2150:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 129,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2173:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2150:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2150:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 132,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2274:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																	"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																}
															},
															"id": 134,
															"indexExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2284:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2274:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_storage",
																"typeString": "struct B0843020.Proposal storage ref"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2274:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 136,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2307:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2307:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2274:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2274:46:0"
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "proposal",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1722:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1721:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1744:0:0"
									},
									"scope": 184,
									"src": "1708:670:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "2479:358:0",
										"statements": [
											{
												"assignments": [
													147
												],
												"declarations": [
													{
														"constant": false,
														"id": 147,
														"name": "maxVote",
														"nodeType": "VariableDeclaration",
														"scope": 182,
														"src": "2490:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 146,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2505:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2490:16:0"
											},
											{
												"body": {
													"id": 180,
													"nodeType": "Block",
													"src": "2662:168:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 161,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "2680:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																				"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 163,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 162,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 151,
																			"src": "2690:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2680:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$6_storage",
																			"typeString": "struct B0843020.Proposal storage ref"
																		}
																	},
																	"id": 164,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "2680:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 165,
																	"name": "maxVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 147,
																	"src": "2705:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2680:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 179,
															"nodeType": "IfStatement",
															"src": "2677:142:0",
															"trueBody": {
																"id": 178,
																"nodeType": "Block",
																"src": "2714:105:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 167,
																				"name": "maxVote",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "2733:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 168,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 16,
																						"src": "2743:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																							"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 170,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 169,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 151,
																						"src": "2753:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2743:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$6_storage",
																						"typeString": "struct B0843020.Proposal storage ref"
																					}
																				},
																				"id": 171,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5,
																				"src": "2743:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2733:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 173,
																		"nodeType": "ExpressionStatement",
																		"src": "2733:32:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 174,
																				"name": "winningProposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "2784:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 175,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "2802:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2784:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 177,
																		"nodeType": "ExpressionStatement",
																		"src": "2784:19:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 154,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "2635:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 155,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2639:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2639:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2635:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 181,
												"initializationExpression": {
													"assignments": [
														151
													],
													"declarations": [
														{
															"constant": false,
															"id": 151,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 181,
															"src": "2623:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 150,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2623:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 153,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2632:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2623:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2657:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 158,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "2657:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 160,
													"nodeType": "ExpressionStatement",
													"src": "2657:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2619:211:0"
											}
										]
									},
									"documentation": null,
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showWinningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2433:2:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "2457:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2456:22:0"
									},
									"scope": 184,
									"src": "2405:432:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 185,
							"src": "36:2804:0"
						}
					],
					"src": "0:2840:0"
				},
				"id": 0
			}
		}
	}
}