{
	"id": "1cee2aaf9c4282f28e66af02597b1071",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"B0843020.sol": {
				"content": "pragma solidity >=0.4.22 <0.6.0;\r\n\r\ncontract B0843020 {\r\n     \r\n    //投票可選的提案數據結構\r\n    struct Proposal {\r\n        string name;\r\n        uint voteCount;\r\n    }\r\n     \r\n    //投票者的數據結構\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint votedProposal;\r\n    }\r\n     \r\n    Proposal[] proposals; //提案列表\r\n    address chairperson; //發起投票的人(這個投票合約的擁有者)\r\n    mapping(address => Voter) voters; //投票者地址與投票狀態的變數\r\n     \r\n    //合約建構子\r\n    constructor() public {\r\n        chairperson = msg.sender; //發起投票的人=呼叫建構子(創立這個合約)的人\r\n        voters[chairperson].weight = 1; //發起投票的人的投票權重(可以投1票)\r\n        //把傳進的所有提案push進提案列表\r\n        proposals.push(Proposal({\r\n            name: \"阿糖\",\r\n            voteCount: 0\r\n        }));\r\n        proposals.push(Proposal({\r\n            name: \"力量人\",\r\n            voteCount: 0\r\n        }));\r\n    }\r\n     \r\n    //發起投票的人指定誰有權利投票的function\r\n    //預防有人惡意使用多個帳號影響投票公正性\r\n    function giveRightToVote(address voter) public {\r\n        require(msg.sender == chairperson);//確認調用這個function的人是發起投票的人\r\n        require(voters[voter].voted == false);//確認要被授權投票權利的人是還沒有投票的人\r\n        require(voters[voter].weight == 0);//確認要被授權投票權利的人是沒有投票權利的人(投票權重0)\r\n         \r\n        voters[voter].weight = 1;//將要被授權投票權利的人的投票權重設為1\r\n    }\r\n     \r\n    //投票\r\n    function vote(uint proposal) public {\r\n        Voter storage sender = voters[msg.sender];//用storage修飾這個變數讓這個投票者的資訊會被記錄在區塊鏈上\r\n         \r\n        require(sender.voted ==false);//確認投票者是還沒有投過票的人\r\n        require(sender.weight > 0);//確認投票者是有權利投票的人(投票權重>0)\r\n         \r\n        sender.voted = true;//將投票者設為已投票\r\n        sender.votedProposal = proposal;//將投票者投的提案記錄在會被備份在區塊鏈的變數上\r\n         \r\n        proposals[proposal].voteCount += sender.weight;//將提該案的人數加上投票者投的權重\r\n    }\r\n     \r\n    //開票\r\n    function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r\n        uint maxVote = 0; //將目前最多的得票數設為0\r\n         \r\n        //迴圈找出所有提案得票數最多的\r\n        for(uint i = 0; i < proposals.length; i++) {\r\n            if(proposals[i].voteCount > maxVote) {\r\n                maxVote = proposals[i].voteCount;\r\n                winningProposal = i;\r\n                winningProposalName=proposals[i].name;\r\n            }\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"B0843020.sol": {
				"B0843020": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "voter",
									"type": "address"
								}
							],
							"name": "giveRightToVote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "showWinningProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "winningProposal",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "winningProposalName",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposal",
									"type": "uint256"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"B0843020.sol\":36:2931  contract B0843020 {\r... */\n  mstore(0x40, 0x80)\n    /* \"B0843020.sol\":563:1048  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"B0843020.sol\":563:1048  constructor() public {\r... */\n  pop\n    /* \"B0843020.sol\":609:619  msg.sender */\n  caller\n    /* \"B0843020.sol\":595:606  chairperson */\n  0x01\n  0x00\n    /* \"B0843020.sol\":595:619  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":722:723  1 */\n  0x01\n    /* \"B0843020.sol\":693:699  voters */\n  0x02\n    /* \"B0843020.sol\":693:712  voters[chairperson] */\n  0x00\n    /* \"B0843020.sol\":700:711  chairperson */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"B0843020.sol\":693:712  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"B0843020.sol\":693:719  voters[chairperson].weight */\n  0x00\n  add\n    /* \"B0843020.sol\":693:723  voters[chairperson].weight = 1 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"B0843020.sol\":840:849  proposals */\n  0x00\n    /* \"B0843020.sol\":855:932  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x06\n  dup2\n  mstore\n  0x20\n  add\n  0xe998bfe7b3960000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"B0843020.sol\":919:920  0 */\n  0x00\n    /* \"B0843020.sol\":855:932  Proposal({\r... */\n  dup2\n  mstore\n  pop\n    /* \"B0843020.sol\":840:933  proposals.push(Proposal({\r... */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"B0843020.sol\":840:933  proposals.push(Proposal({\r... */\n  swap1\n  0x01\n  dup3\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_5\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":944:953  proposals */\n  0x00\n    /* \"B0843020.sol\":959:1039  Proposal({\r... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0xe58a9be9878fe4baba0000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  dup2\n  mstore\n  0x20\n  add\n    /* \"B0843020.sol\":1026:1027  0 */\n  0x00\n    /* \"B0843020.sol\":959:1039  Proposal({\r... */\n  dup2\n  mstore\n  pop\n    /* \"B0843020.sol\":944:1040  proposals.push(Proposal({\r... */\n  swap1\n  dup1\n    /* \"--CODEGEN--\":39:40   */\n  0x01\n    /* \"--CODEGEN--\":33:36   */\n  dup2\n    /* \"--CODEGEN--\":27:37   */\n  sload\n    /* \"--CODEGEN--\":23:41   */\n  add\n    /* \"--CODEGEN--\":57:67   */\n  dup1\n    /* \"--CODEGEN--\":52:55   */\n  dup3\n    /* \"--CODEGEN--\":45:68   */\n  sstore\n    /* \"--CODEGEN--\":79:89   */\n  dup1\n    /* \"--CODEGEN--\":72:89   */\n  swap2\n  pop\n    /* \"--CODEGEN--\":0:93   */\n  pop\n    /* \"B0843020.sol\":944:1040  proposals.push(Proposal({\r... */\n  swap1\n  0x01\n  dup3\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x02\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap3\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_8:\n  pop\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  pop\n  pop\n  pop\n    /* \"B0843020.sol\":36:2931  contract B0843020 {\r... */\n  jump(tag_9)\ntag_6:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_11\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_10)\ntag_11:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_10\n  jumpi\n  swap2\n  dup3\n  add\ntag_12:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_13\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_12)\ntag_13:\ntag_10:\n  pop\n  swap1\n  pop\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n  pop\n  swap1\n  jump\t// out\ntag_15:\n  tag_16\n  swap2\n  swap1\ntag_17:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_18\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_17)\ntag_18:\n  pop\n  swap1\n  jump\ntag_16:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"B0843020.sol\":36:2931  contract B0843020 {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"B0843020.sol\":36:2931  contract B0843020 {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0121b93f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x38351021\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x9e7b8d61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"B0843020.sol\":1707:2377  function vote(uint proposal) public {\r... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"B0843020.sol\":1707:2377  function vote(uint proposal) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_8\n      jump\t// in\n    tag_6:\n      stop\n        /* \"B0843020.sol\":2404:2928  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":23:24   */\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_11:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":99:100   */\n      dup1\n        /* \"--CODEGEN--\":94:97   */\n      dup3\n        /* \"--CODEGEN--\":90:101   */\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":80:81   */\n      dup2\n        /* \"--CODEGEN--\":75:78   */\n      dup5\n        /* \"--CODEGEN--\":71:82   */\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":49:50   */\n      dup2\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":40:55   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_11)\n    tag_13:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"B0843020.sol\":2404:2928  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_14\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_14:\n      pop\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"B0843020.sol\":1187:1680  function giveRightToVote(address voter) public {\r... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"B0843020.sol\":1187:1680  function giveRightToVote(address voter) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      stop\n        /* \"B0843020.sol\":1707:2377  function vote(uint proposal) public {\r... */\n    tag_8:\n        /* \"B0843020.sol\":1754:1774  Voter storage sender */\n      0x00\n        /* \"B0843020.sol\":1777:1783  voters */\n      0x02\n        /* \"B0843020.sol\":1777:1795  voters[msg.sender] */\n      0x00\n        /* \"B0843020.sol\":1784:1794  msg.sender */\n      caller\n        /* \"B0843020.sol\":1777:1795  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1754:1795  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"B0843020.sol\":1924:1929  false */\n      0x00\n        /* \"B0843020.sol\":1909:1929  sender.voted ==false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1909:1915  sender */\n      dup2\n        /* \"B0843020.sol\":1909:1921  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1909:1929  sender.voted ==false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1901:1930  require(sender.voted ==false) */\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n        /* \"B0843020.sol\":2009:2010  0 */\n      0x00\n        /* \"B0843020.sol\":1993:1999  sender */\n      dup2\n        /* \"B0843020.sol\":1993:2006  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":1993:2010  sender.weight > 0 */\n      gt\n        /* \"B0843020.sol\":1985:2011  require(sender.weight > 0) */\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n        /* \"B0843020.sol\":2105:2109  true */\n      0x01\n        /* \"B0843020.sol\":2090:2096  sender */\n      dup2\n        /* \"B0843020.sol\":2090:2102  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2090:2109  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2172:2180  proposal */\n      dup2\n        /* \"B0843020.sol\":2149:2155  sender */\n      dup2\n        /* \"B0843020.sol\":2149:2169  sender.votedProposal */\n      0x02\n      add\n        /* \"B0843020.sol\":2149:2180  sender.votedProposal = proposal */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":2306:2312  sender */\n      dup1\n        /* \"B0843020.sol\":2306:2319  sender.weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":2273:2282  proposals */\n      0x00\n        /* \"B0843020.sol\":2283:2291  proposal */\n      dup4\n        /* \"B0843020.sol\":2273:2292  proposals[proposal] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2273:2302  proposals[proposal].voteCount */\n      0x01\n      add\n      0x00\n        /* \"B0843020.sol\":2273:2319  proposals[proposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1707:2377  function vote(uint proposal) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"B0843020.sol\":2404:2928  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n    tag_10:\n        /* \"B0843020.sol\":2456:2476  uint winningProposal */\n      0x00\n        /* \"B0843020.sol\":2479:2512  string memory winningProposalName */\n      0x60\n        /* \"B0843020.sol\":2525:2537  uint maxVote */\n      0x00\n        /* \"B0843020.sol\":2540:2541  0 */\n      dup1\n        /* \"B0843020.sol\":2525:2541  uint maxVote = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2658:2664  uint i */\n      0x00\n        /* \"B0843020.sol\":2667:2668  0 */\n      dup1\n        /* \"B0843020.sol\":2658:2668  uint i = 0 */\n      swap1\n      pop\n        /* \"B0843020.sol\":2654:2921  for(uint i = 0; i < proposals.length; i++) {\r... */\n    tag_24:\n        /* \"B0843020.sol\":2674:2683  proposals */\n      0x00\n        /* \"B0843020.sol\":2674:2690  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"B0843020.sol\":2670:2671  i */\n      dup2\n        /* \"B0843020.sol\":2670:2690  i < proposals.length */\n      lt\n        /* \"B0843020.sol\":2654:2921  for(uint i = 0; i < proposals.length; i++) {\r... */\n      iszero\n      tag_25\n      jumpi\n        /* \"B0843020.sol\":2740:2747  maxVote */\n      dup2\n        /* \"B0843020.sol\":2715:2724  proposals */\n      0x00\n        /* \"B0843020.sol\":2725:2726  i */\n      dup3\n        /* \"B0843020.sol\":2715:2727  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2715:2737  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2715:2747  proposals[i].voteCount > maxVote */\n      gt\n        /* \"B0843020.sol\":2712:2910  if(proposals[i].voteCount > maxVote) {\r... */\n      iszero\n      tag_29\n      jumpi\n        /* \"B0843020.sol\":2778:2787  proposals */\n      0x00\n        /* \"B0843020.sol\":2788:2789  i */\n      dup2\n        /* \"B0843020.sol\":2778:2790  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2778:2800  proposals[i].voteCount */\n      0x01\n      add\n      sload\n        /* \"B0843020.sol\":2768:2800  maxVote = proposals[i].voteCount */\n      swap2\n      pop\n        /* \"B0843020.sol\":2837:2838  i */\n      dup1\n        /* \"B0843020.sol\":2819:2838  winningProposal = i */\n      swap4\n      pop\n        /* \"B0843020.sol\":2877:2886  proposals */\n      0x00\n        /* \"B0843020.sol\":2887:2888  i */\n      dup2\n        /* \"B0843020.sol\":2877:2889  proposals[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"B0843020.sol\":2877:2894  proposals[i].name */\n      0x00\n      add\n        /* \"B0843020.sol\":2857:2894  winningProposalName=proposals[i].name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_34\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_35\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_34)\n    tag_35:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_36:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_36\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap3\n      pop\n        /* \"B0843020.sol\":2712:2910  if(proposals[i].voteCount > maxVote) {\r... */\n    tag_29:\n        /* \"B0843020.sol\":2692:2695  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"B0843020.sol\":2654:2921  for(uint i = 0; i < proposals.length; i++) {\r... */\n      jump(tag_24)\n    tag_25:\n      pop\n        /* \"B0843020.sol\":2404:2928  function showWinningProposal() public view returns (uint winningProposal , string memory winningProposalName) {\r... */\n      pop\n      swap1\n      swap2\n      jump\t// out\n        /* \"B0843020.sol\":1187:1680  function giveRightToVote(address voter) public {\r... */\n    tag_17:\n        /* \"B0843020.sol\":1267:1278  chairperson */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1253:1278  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"B0843020.sol\":1253:1263  msg.sender */\n      caller\n        /* \"B0843020.sol\":1253:1278  msg.sender == chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"B0843020.sol\":1245:1279  require(msg.sender == chairperson) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"B0843020.sol\":1376:1381  false */\n      0x00\n        /* \"B0843020.sol\":1353:1381  voters[voter].voted == false */\n      iszero\n      iszero\n        /* \"B0843020.sol\":1353:1359  voters */\n      0x02\n        /* \"B0843020.sol\":1353:1366  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1360:1365  voter */\n      dup4\n        /* \"B0843020.sol\":1353:1366  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1353:1372  voters[voter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"B0843020.sol\":1353:1381  voters[voter].voted == false */\n      iszero\n      iszero\n      eq\n        /* \"B0843020.sol\":1345:1382  require(voters[voter].voted == false) */\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n        /* \"B0843020.sol\":1487:1488  0 */\n      0x00\n        /* \"B0843020.sol\":1463:1469  voters */\n      0x02\n        /* \"B0843020.sol\":1463:1476  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1470:1475  voter */\n      dup4\n        /* \"B0843020.sol\":1463:1476  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1463:1483  voters[voter].weight */\n      0x00\n      add\n      sload\n        /* \"B0843020.sol\":1463:1488  voters[voter].weight == 0 */\n      eq\n        /* \"B0843020.sol\":1455:1489  require(voters[voter].weight == 0) */\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n        /* \"B0843020.sol\":1614:1615  1 */\n      0x01\n        /* \"B0843020.sol\":1591:1597  voters */\n      0x02\n        /* \"B0843020.sol\":1591:1604  voters[voter] */\n      0x00\n        /* \"B0843020.sol\":1598:1603  voter */\n      dup4\n        /* \"B0843020.sol\":1591:1604  voters[voter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"B0843020.sol\":1591:1611  voters[voter].weight */\n      0x00\n      add\n        /* \"B0843020.sol\":1591:1615  voters[voter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"B0843020.sol\":1187:1680  function giveRightToVote(address voter) public {\r... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820f585f37c3ea04f12320018888289474b8abd4bdf69f2e3796cc3b2010f61eb1364736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160026000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550600060405180604001604052806040518060400160405280600681526020017fe998bfe7b396000000000000000000000000000000000000000000000000000081525081526020016000815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610150929190610205565b5060208201518160010155505050600060405180604001604052806040518060400160405280600981526020017fe58a9be9878fe4baba0000000000000000000000000000000000000000000000815250815260200160008152509080600181540180825580915050906001820390600052602060002090600202016000909192909190915060008201518160000190805190602001906101f2929190610205565b50602082015181600101555050506102aa565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061024657805160ff1916838001178555610274565b82800160010185558215610274579182015b82811115610273578251825591602001919060010190610258565b5b5090506102819190610285565b5090565b6102a791905b808211156102a357600081600090555060010161028b565b5090565b90565b6104ce806102b96000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d61146100fe575b600080fd5b6100726004803603602081101561005c57600080fd5b8101908080359060200190929190505050610142565b005b61007c610212565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100c25780820151818401526020810190506100a7565b50505050905090810190601f1680156100ef5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610345565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff161515146101a757600080fd5b60008160000154116101b857600080fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600083815481106101f057fe5b9060005260206000209060020201600101600082825401925050819055505050565b60006060600080905060008090505b60008054905081101561033f57816000828154811061023c57fe5b9060005260206000209060020201600101541115610332576000818154811061026157fe5b90600052602060002090600202016001015491508093506000818154811061028557fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b505050505092505b8080600101915050610221565b50509091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039f57600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146103ff57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461044e57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a72315820f585f37c3ea04f12320018888289474b8abd4bdf69f2e3796cc3b2010f61eb1364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xE998BFE7B3960000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x150 SWAP3 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xE58A9BE9878FE4BABA0000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1F2 SWAP3 SWAP2 SWAP1 PUSH2 0x205 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP PUSH2 0x2AA JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x246 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x274 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x274 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x273 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x258 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x285 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x2A7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x28B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x4CE DUP1 PUSH2 0x2B9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x33F JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x261 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x285 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x32A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x221 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CREATE2 DUP6 RETURN PUSH29 0x3EA04F12320018888289474B8ABD4BDF69F2E3796CC3B2010F61EB1364 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "36:2895:0:-;;;563:485;8:9:-1;5:2;;;30:1;27;20:12;5:2;563:485:0;609:10;595:11;;:24;;;;;;;;;;;;;;;;;;722:1;693:6;:19;700:11;;;;;;;;;;;693:19;;;;;;;;;;;;;;;:26;;:30;;;;840:9;855:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:1;855:77;;;840:93;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;840::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;944:9;959:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1026:1;959:80;;;944:96;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;944:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;36:2895;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80630121b93f1461004657806338351021146100745780639e7b8d61146100fe575b600080fd5b6100726004803603602081101561005c57600080fd5b8101908080359060200190929190505050610142565b005b61007c610212565b6040518083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156100c25780820151818401526020810190506100a7565b50505050905090810190601f1680156100ef5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b6101406004803603602081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610345565b005b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160010160009054906101000a900460ff161515146101a757600080fd5b60008160000154116101b857600080fd5b60018160010160006101000a81548160ff0219169083151502179055508181600201819055508060000154600083815481106101f057fe5b9060005260206000209060020201600101600082825401925050819055505050565b60006060600080905060008090505b60008054905081101561033f57816000828154811061023c57fe5b9060005260206000209060020201600101541115610332576000818154811061026157fe5b90600052602060002090600202016001015491508093506000818154811061028557fe5b90600052602060002090600202016000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561032a5780601f106102ff5761010080835404028352916020019161032a565b820191906000526020600020905b81548152906001019060200180831161030d57829003601f168201915b505050505092505b8080600101915050610221565b50509091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039f57600080fd5b60001515600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161515146103ff57600080fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541461044e57600080fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505056fea265627a7a72315820f585f37c3ea04f12320018888289474b8abd4bdf69f2e3796cc3b2010f61eb1364736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x121B93F EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x38351021 EQ PUSH2 0x74 JUMPI DUP1 PUSH4 0x9E7B8D61 EQ PUSH2 0xFE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x142 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xC2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 ISZERO ISZERO DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1F0 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x33F JUMPI DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x23C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x261 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x285 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x32A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2FF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x30D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x221 JUMP JUMPDEST POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x3FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 CREATE2 DUP6 RETURN PUSH29 0x3EA04F12320018888289474B8ABD4BDF69F2E3796CC3B2010F61EB1364 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "36:2895:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;36:2895:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1707:670;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1707:670:0;;;;;;;;;;;;;;;;;:::i;:::-;;2404:524;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2404:524:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:493;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1187:493:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1707:670;1754:20;1777:6;:18;1784:10;1777:18;;;;;;;;;;;;;;;1754:41;;1924:5;1909:20;;:6;:12;;;;;;;;;;;;:20;;;1901:29;;;;;;2009:1;1993:6;:13;;;:17;1985:26;;;;;;2105:4;2090:6;:12;;;:19;;;;;;;;;;;;;;;;;;2172:8;2149:6;:20;;:31;;;;2306:6;:13;;;2273:9;2283:8;2273:19;;;;;;;;;;;;;;;;;;:29;;;:46;;;;;;;;;;;1707:670;;:::o;2404:524::-;2456:20;2479:33;2525:12;2540:1;2525:16;;2658:6;2667:1;2658:10;;2654:267;2674:9;:16;;;;2670:1;:20;2654:267;;;2740:7;2715:9;2725:1;2715:12;;;;;;;;;;;;;;;;;;:22;;;:32;2712:198;;;2778:9;2788:1;2778:12;;;;;;;;;;;;;;;;;;:22;;;2768:32;;2837:1;2819:19;;2877:9;2887:1;2877:12;;;;;;;;;;;;;;;;;;:17;;2857:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2712:198;2692:3;;;;;;;2654:267;;;;2404:524;;;:::o;1187:493::-;1267:11;;;;;;;;;;;1253:25;;:10;:25;;;1245:34;;;;;;1376:5;1353:28;;:6;:13;1360:5;1353:13;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:28;;;1345:37;;;;;;1487:1;1463:6;:13;1470:5;1463:13;;;;;;;;;;;;;;;:20;;;:25;1455:34;;;;;;1614:1;1591:6;:13;1598:5;1591:13;;;;;;;;;;;;;;;:20;;:24;;;;1187:493;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "246000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"giveRightToVote(address)": "23122",
								"showWinningProposal()": "infinite",
								"vote(uint256)": "65443"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "MSTORE"
								},
								{
									"begin": 563,
									"end": 1048,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 563,
									"end": 1048,
									"name": "POP"
								},
								{
									"begin": 609,
									"end": 619,
									"name": "CALLER"
								},
								{
									"begin": 595,
									"end": 606,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 595,
									"end": 606,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "EXP"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "DUP2"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "SLOAD"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "DUP2"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "MUL"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "NOT"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "AND"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "SWAP1"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "DUP4"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "AND"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "MUL"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "OR"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "SWAP1"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "SSTORE"
								},
								{
									"begin": 595,
									"end": 619,
									"name": "POP"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 693,
									"end": 699,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "SLOAD"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "EXP"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "DIV"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 700,
									"end": 711,
									"name": "AND"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "AND"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "AND"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "DUP2"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "MSTORE"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "ADD"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "SWAP1"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "DUP2"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "MSTORE"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "ADD"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 693,
									"end": 712,
									"name": "KECCAK256"
								},
								{
									"begin": 693,
									"end": 719,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 693,
									"end": 719,
									"name": "ADD"
								},
								{
									"begin": 693,
									"end": 723,
									"name": "DUP2"
								},
								{
									"begin": 693,
									"end": 723,
									"name": "SWAP1"
								},
								{
									"begin": 693,
									"end": 723,
									"name": "SSTORE"
								},
								{
									"begin": 693,
									"end": 723,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 849,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MLOAD"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP1"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "ADD"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MSTORE"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP1"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MLOAD"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP1"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "ADD"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MSTORE"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP1"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP2"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MSTORE"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "ADD"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "E998BFE7B3960000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP2"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MSTORE"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "POP"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP2"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MSTORE"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "ADD"
								},
								{
									"begin": 919,
									"end": 920,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "DUP2"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "MSTORE"
								},
								{
									"begin": 855,
									"end": 932,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "DUP3"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SUB"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "MSTORE"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "KECCAK256"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "MUL"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP2"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP3"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP2"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP2"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "DUP3"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "MLOAD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "DUP2"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "DUP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "MLOAD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP3"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP2"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SWAP1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "JUMPDEST"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "DUP3"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "MLOAD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "DUP2"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "ADD"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "SSTORE"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "POP"
								},
								{
									"begin": 840,
									"end": 933,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 953,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MLOAD"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP1"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP1"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MLOAD"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP1"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP1"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "9"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "ADD"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "E58A9BE9878FE4BABA0000000000000000000000000000000000000000000000"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "POP"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "ADD"
								},
								{
									"begin": 1026,
									"end": 1027,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "DUP2"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "MSTORE"
								},
								{
									"begin": 959,
									"end": 1039,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "DUP1"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 33,
									"end": 36,
									"name": "DUP2"
								},
								{
									"begin": 27,
									"end": 37,
									"name": "SLOAD"
								},
								{
									"begin": 23,
									"end": 41,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 67,
									"name": "DUP1"
								},
								{
									"begin": 52,
									"end": 55,
									"name": "DUP3"
								},
								{
									"begin": 45,
									"end": 68,
									"name": "SSTORE"
								},
								{
									"begin": 79,
									"end": 89,
									"name": "DUP1"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "SWAP2"
								},
								{
									"begin": 72,
									"end": 89,
									"name": "POP"
								},
								{
									"begin": 0,
									"end": 93,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "DUP3"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SUB"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "MSTORE"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "KECCAK256"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "MUL"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP2"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP3"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP2"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP2"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "DUP3"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "MLOAD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "DUP2"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "DUP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "MLOAD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP3"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP2"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "JUMPDEST"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "DUP3"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "MLOAD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "DUP2"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "ADD"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "SSTORE"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "POP"
								},
								{
									"begin": 944,
									"end": 1040,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SLOAD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "AND"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "MUL"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SUB"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "AND"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DIV"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "MSTORE"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "KECCAK256"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DIV"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "1F"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "LT"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "MLOAD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "NOT"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "AND"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP4"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "OR"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP6"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP6"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "GT"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "MLOAD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP3"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "GT"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ISZERO"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPI"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP2"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SSTORE"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "ADD"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "POP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "SWAP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "JUMPDEST"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "DUP1"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "CODECOPY"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 36,
									"end": 2931,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820f585f37c3ea04f12320018888289474b8abd4bdf69f2e3796cc3b2010f61eb1364736f6c63430005110032",
									".code": [
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "MSTORE"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "SHR"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "121B93F"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "38351021"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "9E7B8D61"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "EQ"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "JUMPI"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "DUP1"
										},
										{
											"begin": 36,
											"end": 2931,
											"name": "REVERT"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "JUMPDEST"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "DUP1"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "DUP2"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "ADD"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "SWAP1"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "DUP1"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "DUP1"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "SWAP1"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "ADD"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "SWAP1"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "SWAP3"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "SWAP2"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "SWAP1"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "JUMPDEST"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "STOP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "JUMPDEST"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "JUMPDEST"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MLOAD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP4"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MSTORE"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP3"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SUB"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP3"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MSTORE"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP4"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MLOAD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MSTORE"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MLOAD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP4"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP4"
										},
										{
											"begin": 23,
											"end": 24,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 99,
											"end": 100,
											"name": "DUP1"
										},
										{
											"begin": 94,
											"end": 97,
											"name": "DUP3"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 80,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 75,
											"end": 78,
											"name": "DUP5"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 50,
											"name": "DUP2"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "SWAP1"
										},
										{
											"begin": 40,
											"end": 55,
											"name": "POP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "ISZERO"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "JUMPI"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP3"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SUB"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MLOAD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP4"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SUB"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "EXP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SUB"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "NOT"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "AND"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MSTORE"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "ADD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "JUMPDEST"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP4"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "MLOAD"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "DUP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SUB"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "RETURN"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "DUP2"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "ADD"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "DUP1"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "AND"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "ADD"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "SWAP3"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "SWAP2"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "SWAP1"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "STOP"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "JUMPDEST"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1783,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "CALLER"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "AND"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "AND"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "DUP2"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "MSTORE"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "SWAP1"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "DUP2"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "MSTORE"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "ADD"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1795,
											"name": "KECCAK256"
										},
										{
											"begin": 1754,
											"end": 1795,
											"name": "SWAP1"
										},
										{
											"begin": 1754,
											"end": 1795,
											"name": "POP"
										},
										{
											"begin": 1924,
											"end": 1929,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1929,
											"name": "ISZERO"
										},
										{
											"begin": 1909,
											"end": 1929,
											"name": "ISZERO"
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP2"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "ADD"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "SWAP1"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "SLOAD"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "SWAP1"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "EXP"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "SWAP1"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "DIV"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1909,
											"end": 1921,
											"name": "AND"
										},
										{
											"begin": 1909,
											"end": 1929,
											"name": "ISZERO"
										},
										{
											"begin": 1909,
											"end": 1929,
											"name": "ISZERO"
										},
										{
											"begin": 1909,
											"end": 1929,
											"name": "EQ"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "JUMPI"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "DUP1"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "REVERT"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1901,
											"end": 1930,
											"name": "JUMPDEST"
										},
										{
											"begin": 2009,
											"end": 2010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP2"
										},
										{
											"begin": 1993,
											"end": 2006,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2006,
											"name": "ADD"
										},
										{
											"begin": 1993,
											"end": 2006,
											"name": "SLOAD"
										},
										{
											"begin": 1993,
											"end": 2010,
											"name": "GT"
										},
										{
											"begin": 1985,
											"end": 2011,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2011,
											"name": "JUMPI"
										},
										{
											"begin": 1985,
											"end": 2011,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2011,
											"name": "DUP1"
										},
										{
											"begin": 1985,
											"end": 2011,
											"name": "REVERT"
										},
										{
											"begin": 1985,
											"end": 2011,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2011,
											"name": "JUMPDEST"
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP2"
										},
										{
											"begin": 2090,
											"end": 2102,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2090,
											"end": 2102,
											"name": "ADD"
										},
										{
											"begin": 2090,
											"end": 2102,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "EXP"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "DUP2"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "SLOAD"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "DUP2"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "MUL"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "NOT"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "AND"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "SWAP1"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "DUP4"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "ISZERO"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "ISZERO"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "MUL"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "OR"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "SWAP1"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "SSTORE"
										},
										{
											"begin": 2090,
											"end": 2109,
											"name": "POP"
										},
										{
											"begin": 2172,
											"end": 2180,
											"name": "DUP2"
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "DUP2"
										},
										{
											"begin": 2149,
											"end": 2169,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2149,
											"end": 2169,
											"name": "ADD"
										},
										{
											"begin": 2149,
											"end": 2180,
											"name": "DUP2"
										},
										{
											"begin": 2149,
											"end": 2180,
											"name": "SWAP1"
										},
										{
											"begin": 2149,
											"end": 2180,
											"name": "SSTORE"
										},
										{
											"begin": 2149,
											"end": 2180,
											"name": "POP"
										},
										{
											"begin": 2306,
											"end": 2312,
											"name": "DUP1"
										},
										{
											"begin": 2306,
											"end": 2319,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2306,
											"end": 2319,
											"name": "ADD"
										},
										{
											"begin": 2306,
											"end": 2319,
											"name": "SLOAD"
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 2291,
											"name": "DUP4"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "SLOAD"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "LT"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "JUMPI"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "INVALID"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "JUMPDEST"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "KECCAK256"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "MUL"
										},
										{
											"begin": 2273,
											"end": 2292,
											"name": "ADD"
										},
										{
											"begin": 2273,
											"end": 2302,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2273,
											"end": 2302,
											"name": "ADD"
										},
										{
											"begin": 2273,
											"end": 2302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "DUP3"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "DUP3"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "SLOAD"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "ADD"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "SWAP3"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "POP"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "POP"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "DUP2"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "SWAP1"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "SSTORE"
										},
										{
											"begin": 2273,
											"end": 2319,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "POP"
										},
										{
											"begin": 1707,
											"end": 2377,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "JUMPDEST"
										},
										{
											"begin": 2456,
											"end": 2476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2479,
											"end": 2512,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 2525,
											"end": 2537,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2541,
											"name": "DUP1"
										},
										{
											"begin": 2525,
											"end": 2541,
											"name": "SWAP1"
										},
										{
											"begin": 2525,
											"end": 2541,
											"name": "POP"
										},
										{
											"begin": 2658,
											"end": 2664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "DUP1"
										},
										{
											"begin": 2658,
											"end": 2668,
											"name": "SWAP1"
										},
										{
											"begin": 2658,
											"end": 2668,
											"name": "POP"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "JUMPDEST"
										},
										{
											"begin": 2674,
											"end": 2683,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2690,
											"name": "DUP1"
										},
										{
											"begin": 2674,
											"end": 2690,
											"name": "SLOAD"
										},
										{
											"begin": 2674,
											"end": 2690,
											"name": "SWAP1"
										},
										{
											"begin": 2674,
											"end": 2690,
											"name": "POP"
										},
										{
											"begin": 2670,
											"end": 2671,
											"name": "DUP2"
										},
										{
											"begin": 2670,
											"end": 2690,
											"name": "LT"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "ISZERO"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "JUMPI"
										},
										{
											"begin": 2740,
											"end": 2747,
											"name": "DUP2"
										},
										{
											"begin": 2715,
											"end": 2724,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2726,
											"name": "DUP3"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "DUP2"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "SLOAD"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "DUP2"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "LT"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "JUMPI"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "INVALID"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "JUMPDEST"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "SWAP1"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "MSTORE"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "KECCAK256"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "SWAP1"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "MUL"
										},
										{
											"begin": 2715,
											"end": 2727,
											"name": "ADD"
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "ADD"
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "SLOAD"
										},
										{
											"begin": 2715,
											"end": 2747,
											"name": "GT"
										},
										{
											"begin": 2712,
											"end": 2910,
											"name": "ISZERO"
										},
										{
											"begin": 2712,
											"end": 2910,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2712,
											"end": 2910,
											"name": "JUMPI"
										},
										{
											"begin": 2778,
											"end": 2787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2788,
											"end": 2789,
											"name": "DUP2"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "DUP2"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "SLOAD"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "DUP2"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "LT"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "JUMPI"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "INVALID"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "JUMPDEST"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "SWAP1"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "MSTORE"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "KECCAK256"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "SWAP1"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "MUL"
										},
										{
											"begin": 2778,
											"end": 2790,
											"name": "ADD"
										},
										{
											"begin": 2778,
											"end": 2800,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2778,
											"end": 2800,
											"name": "ADD"
										},
										{
											"begin": 2778,
											"end": 2800,
											"name": "SLOAD"
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "SWAP2"
										},
										{
											"begin": 2768,
											"end": 2800,
											"name": "POP"
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "DUP1"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "SWAP4"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "POP"
										},
										{
											"begin": 2877,
											"end": 2886,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "DUP2"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "DUP2"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "SLOAD"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "DUP2"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "LT"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "JUMPI"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "INVALID"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "JUMPDEST"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "MSTORE"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "KECCAK256"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "SWAP1"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "MUL"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "ADD"
										},
										{
											"begin": 2877,
											"end": 2894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SLOAD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "AND"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ISZERO"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MUL"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SUB"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "AND"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DIV"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DIV"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MUL"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MLOAD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SLOAD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "AND"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ISZERO"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MUL"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SUB"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "AND"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DIV"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ISZERO"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPI"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "LT"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPI"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP4"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SLOAD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DIV"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MUL"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP4"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPDEST"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "KECCAK256"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPDEST"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SLOAD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "MSTORE"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP4"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "GT"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPI"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP1"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SUB"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "AND"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "DUP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "ADD"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP2"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "JUMPDEST"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "SWAP3"
										},
										{
											"begin": 2857,
											"end": 2894,
											"name": "POP"
										},
										{
											"begin": 2712,
											"end": 2910,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2712,
											"end": 2910,
											"name": "JUMPDEST"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "DUP1"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "DUP1"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "ADD"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "SWAP2"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "POP"
										},
										{
											"begin": 2692,
											"end": 2695,
											"name": "POP"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "JUMP"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "JUMPDEST"
										},
										{
											"begin": 2654,
											"end": 2921,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "POP"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP1"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "SWAP2"
										},
										{
											"begin": 2404,
											"end": 2928,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "JUMPDEST"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "SWAP1"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "SLOAD"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "SWAP1"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "EXP"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "SWAP1"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "DIV"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1267,
											"end": 1278,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1263,
											"name": "CALLER"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "AND"
										},
										{
											"begin": 1253,
											"end": 1278,
											"name": "EQ"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "JUMPI"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "DUP1"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "REVERT"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1245,
											"end": 1279,
											"name": "JUMPDEST"
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1381,
											"name": "ISZERO"
										},
										{
											"begin": 1353,
											"end": 1381,
											"name": "ISZERO"
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1365,
											"name": "DUP4"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "AND"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "AND"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "DUP2"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "MSTORE"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "ADD"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "SWAP1"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "DUP2"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "MSTORE"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "ADD"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1366,
											"name": "KECCAK256"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ADD"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SLOAD"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "EXP"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DIV"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "AND"
										},
										{
											"begin": 1353,
											"end": 1381,
											"name": "ISZERO"
										},
										{
											"begin": 1353,
											"end": 1381,
											"name": "ISZERO"
										},
										{
											"begin": 1353,
											"end": 1381,
											"name": "EQ"
										},
										{
											"begin": 1345,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1382,
											"name": "JUMPI"
										},
										{
											"begin": 1345,
											"end": 1382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1345,
											"end": 1382,
											"name": "DUP1"
										},
										{
											"begin": 1345,
											"end": 1382,
											"name": "REVERT"
										},
										{
											"begin": 1345,
											"end": 1382,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1345,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP4"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "AND"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "AND"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "DUP2"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "MSTORE"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "ADD"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "SWAP1"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "DUP2"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "MSTORE"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "ADD"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "KECCAK256"
										},
										{
											"begin": 1463,
											"end": 1483,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1483,
											"name": "ADD"
										},
										{
											"begin": 1463,
											"end": 1483,
											"name": "SLOAD"
										},
										{
											"begin": 1463,
											"end": 1488,
											"name": "EQ"
										},
										{
											"begin": 1455,
											"end": 1489,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1489,
											"name": "JUMPI"
										},
										{
											"begin": 1455,
											"end": 1489,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1489,
											"name": "DUP1"
										},
										{
											"begin": 1455,
											"end": 1489,
											"name": "REVERT"
										},
										{
											"begin": 1455,
											"end": 1489,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1489,
											"name": "JUMPDEST"
										},
										{
											"begin": 1614,
											"end": 1615,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1591,
											"end": 1597,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1603,
											"name": "DUP4"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "AND"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "AND"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "DUP2"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "MSTORE"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "ADD"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "SWAP1"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "DUP2"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "MSTORE"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "ADD"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1604,
											"name": "KECCAK256"
										},
										{
											"begin": 1591,
											"end": 1611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1611,
											"name": "ADD"
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "SSTORE"
										},
										{
											"begin": 1591,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1680,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"giveRightToVote(address)": "9e7b8d61",
							"showWinningProposal()": "38351021",
							"vote(uint256)": "0121b93f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"giveRightToVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showWinningProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"winningProposal\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"winningProposalName\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposal\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"B0843020.sol\":\"B0843020\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"B0843020.sol\":{\"keccak256\":\"0xb06a3e38360026243ae6947633db84030f1e25ab4c05c0974cccf6514394c9ec\",\"urls\":[\"bzz-raw://2b9928cf847ae474115167666017732baabb549e15daef1f1bad375b30800078\",\"dweb:/ipfs/QmVuRZwmaPjbacUvNHsodQCnS2Vj1a1pa4D8tQ2TrBXTLF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 16,
								"contract": "B0843020.sol:B0843020",
								"label": "proposals",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Proposal)6_storage)dyn_storage"
							},
							{
								"astId": 18,
								"contract": "B0843020.sol:B0843020",
								"label": "chairperson",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 22,
								"contract": "B0843020.sol:B0843020",
								"label": "voters",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Voter)13_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Proposal)6_storage)dyn_storage": {
								"base": "t_struct(Proposal)6_storage",
								"encoding": "dynamic_array",
								"label": "struct B0843020.Proposal[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Voter)13_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct B0843020.Voter)",
								"numberOfBytes": "32",
								"value": "t_struct(Voter)13_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Proposal)6_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Proposal",
								"members": [
									{
										"astId": 3,
										"contract": "B0843020.sol:B0843020",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 5,
										"contract": "B0843020.sol:B0843020",
										"label": "voteCount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Voter)13_storage": {
								"encoding": "inplace",
								"label": "struct B0843020.Voter",
								"members": [
									{
										"astId": 8,
										"contract": "B0843020.sol:B0843020",
										"label": "weight",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 10,
										"contract": "B0843020.sol:B0843020",
										"label": "voted",
										"offset": 0,
										"slot": "1",
										"type": "t_bool"
									},
									{
										"astId": 12,
										"contract": "B0843020.sol:B0843020",
										"label": "votedProposal",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"B0843020.sol": {
				"ast": {
					"absolutePath": "B0843020.sol",
					"exportedSymbols": {
						"B0843020": [
							193
						]
					},
					"id": 194,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193
							],
							"name": "B0843020",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "B0843020.Proposal",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "name",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "136:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "136:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "158:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "158:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "109:71:0",
									"visibility": "public"
								},
								{
									"canonicalName": "B0843020.Voter",
									"id": 13,
									"members": [
										{
											"constant": false,
											"id": 8,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "249:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 7,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "249:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 10,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "271:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 9,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "271:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 12,
											"name": "votedProposal",
											"nodeType": "VariableDeclaration",
											"scope": 13,
											"src": "292:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 11,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "292:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 193,
									"src": "225:93:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "331:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
										"typeString": "struct B0843020.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 14,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "331:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$6_storage_ptr",
												"typeString": "struct B0843020.Proposal"
											}
										},
										"id": 15,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "331:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage_ptr",
											"typeString": "struct B0843020.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 18,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "373:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "452:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
										"typeString": "mapping(address => struct B0843020.Voter)"
									},
									"typeName": {
										"id": 21,
										"keyType": {
											"id": 19,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "452:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
											"typeString": "mapping(address => struct B0843020.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 20,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 13,
											"src": "471:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
												"typeString": "struct B0843020.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "584:464:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "595:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "609:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "609:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "595:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "595:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "693:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "700:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "693:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "693:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "722:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "693:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "693:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "e998bfe7b396",
																	"id": 41,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "885:8:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_3c03c958503c3b7d9043c5cf90ce5989736a6016f5b4fa3e4a6220d0c3c21bc2",
																		"typeString": "literal_string \"阿糖\""
																	},
																	"value": "阿糖"
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 42,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "919:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_3c03c958503c3b7d9043c5cf90ce5989736a6016f5b4fa3e4a6220d0c3c21bc2",
																		"typeString": "literal_string \"阿糖\""
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 40,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "855:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$6_storage_ptr_$",
																	"typeString": "type(struct B0843020.Proposal storage pointer)"
																}
															},
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"name",
																"voteCount"
															],
															"nodeType": "FunctionCall",
															"src": "855:77:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "840:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "840:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$6_storage_$returns$_t_uint256_$",
															"typeString": "function (struct B0843020.Proposal storage ref) returns (uint256)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "840:93:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 45,
												"nodeType": "ExpressionStatement",
												"src": "840:93:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "e58a9be9878fe4baba",
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "989:11:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_704ce6bc9c1b159e7c7703e4b235a4b9cc75b2010c0f6dffc26a05be02c483f6",
																		"typeString": "literal_string \"力量人\""
																	},
																	"value": "力量人"
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 51,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1026:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_704ce6bc9c1b159e7c7703e4b235a4b9cc75b2010c0f6dffc26a05be02c483f6",
																		"typeString": "literal_string \"力量人\""
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 49,
																"name": "Proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "959:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Proposal_$6_storage_ptr_$",
																	"typeString": "type(struct B0843020.Proposal storage pointer)"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"name",
																"voteCount"
															],
															"nodeType": "FunctionCall",
															"src": "959:80:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$6_memory",
																"typeString": "struct B0843020.Proposal memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 46,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "944:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "944:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Proposal_$6_storage_$returns$_t_uint256_$",
															"typeString": "function (struct B0843020.Proposal storage ref) returns (uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:96:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "944:96:0"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:0"
									},
									"scope": 193,
									"src": "563:485:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "1234:446:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 62,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "1253:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1253:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 64,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1267:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1253:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 61,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1245:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1245:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1245:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 69,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1353:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 71,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 70,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1360:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1353:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1353:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1376:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1353:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1345:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1345:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1345:37:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 78,
																		"name": "voters",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 22,
																		"src": "1463:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																			"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																		}
																	},
																	"id": 80,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 79,
																		"name": "voter",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "1470:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1463:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage",
																		"typeString": "struct B0843020.Voter storage ref"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "1463:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1487:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1463:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1455:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "1591:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
																	"typeString": "mapping(address => struct B0843020.Voter storage ref)"
																}
															},
															"id": 88,
															"indexExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "voter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "1598:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1591:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage",
																"typeString": "struct B0843020.Voter storage ref"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "1591:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1614:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1591:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "1591:24:0"
											}
										]
									},
									"documentation": null,
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "giveRightToVote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"name": "voter",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1212:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1211:15:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:0:0"
									},
									"scope": 193,
									"src": "1187:493:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1743:634:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 140,
														"src": "1754:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
															"typeString": "struct B0843020.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 99,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 13,
															"src": "1754:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 101,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "1777:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$13_storage_$",
															"typeString": "mapping(address => struct B0843020.Voter storage ref)"
														}
													},
													"id": 104,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 102,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1784:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1784:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1777:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$13_storage",
														"typeString": "struct B0843020.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1754:41:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 107,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1909:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "voted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 10,
																"src": "1909:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1924:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "1909:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1901:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 112,
												"nodeType": "ExpressionStatement",
												"src": "1901:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 114,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "1993:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																		"typeString": "struct B0843020.Voter storage pointer"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "weight",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 8,
																"src": "1993:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2009:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1993:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															211,
															212
														],
														"referencedDeclaration": 211,
														"src": "1985:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1985:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1985:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 120,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2090:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "2090:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2105:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2090:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "2090:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 126,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2149:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "votedProposal",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "2149:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 129,
														"name": "proposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2172:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2149:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2149:31:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 132,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "2273:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																	"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																}
															},
															"id": 134,
															"indexExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2283:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2273:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$6_storage",
																"typeString": "struct B0843020.Proposal storage ref"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "2273:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 136,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "2306:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$13_storage_ptr",
																"typeString": "struct B0843020.Voter storage pointer"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 8,
														"src": "2306:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2273:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2273:46:0"
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "proposal",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1721:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1721:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1720:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:0:0"
									},
									"scope": 193,
									"src": "1707:670:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2514:414:0",
										"statements": [
											{
												"assignments": [
													149
												],
												"declarations": [
													{
														"constant": false,
														"id": 149,
														"name": "maxVote",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2525:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 148,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2525:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 151,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2540:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2525:16:0"
											},
											{
												"body": {
													"id": 189,
													"nodeType": "Block",
													"src": "2697:224:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 163,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 16,
																			"src": "2715:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																				"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 165,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 164,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 153,
																			"src": "2725:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2715:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$6_storage",
																			"typeString": "struct B0843020.Proposal storage ref"
																		}
																	},
																	"id": 166,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "2715:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 167,
																	"name": "maxVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "2740:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2715:32:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 188,
															"nodeType": "IfStatement",
															"src": "2712:198:0",
															"trueBody": {
																"id": 187,
																"nodeType": "Block",
																"src": "2749:161:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 169,
																				"name": "maxVote",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 149,
																				"src": "2768:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 170,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 16,
																						"src": "2778:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																							"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 172,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 171,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 153,
																						"src": "2788:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2778:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$6_storage",
																						"typeString": "struct B0843020.Proposal storage ref"
																					}
																				},
																				"id": 173,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 5,
																				"src": "2778:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2768:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 175,
																		"nodeType": "ExpressionStatement",
																		"src": "2768:32:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 176,
																				"name": "winningProposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "2819:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 177,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 153,
																				"src": "2837:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2819:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 179,
																		"nodeType": "ExpressionStatement",
																		"src": "2819:19:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 180,
																				"name": "winningProposalName",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "2857:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 181,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 16,
																						"src": "2877:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																							"typeString": "struct B0843020.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 183,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 182,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 153,
																						"src": "2887:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2877:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$6_storage",
																						"typeString": "struct B0843020.Proposal storage ref"
																					}
																				},
																				"id": 184,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "name",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3,
																				"src": "2877:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				}
																			},
																			"src": "2857:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"id": 186,
																		"nodeType": "ExpressionStatement",
																		"src": "2857:37:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "2670:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 157,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "2674:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$6_storage_$dyn_storage",
																"typeString": "struct B0843020.Proposal storage ref[] storage ref"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2674:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2670:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"initializationExpression": {
													"assignments": [
														153
													],
													"declarations": [
														{
															"constant": false,
															"id": 153,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 190,
															"src": "2658:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 152,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2658:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 155,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2667:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2658:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2692:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 160,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "2692:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 162,
													"nodeType": "ExpressionStatement",
													"src": "2692:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2654:267:0"
											}
										]
									},
									"documentation": null,
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "showWinningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2432:2:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"name": "winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2456:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2456:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"name": "winningProposalName",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2479:33:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 145,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2479:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2455:58:0"
									},
									"scope": 193,
									"src": "2404:524:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 194,
							"src": "36:2895:0"
						}
					],
					"src": "0:2931:0"
				},
				"id": 0
			}
		}
	}
}